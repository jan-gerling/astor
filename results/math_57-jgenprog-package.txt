2019-04-16 05:52:47,258 INFO main - command line arguments: [-jvm4testexecution  /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin  -mode  jgenprog  -scope  package  -srcjavafolder  /src/java/  -srctestfolder  /src/test/  -binjavafolder  /target/classes/  -bintestfolder  /target/test-classes/  -location  /home/jan_gerling/astor/defect4j_tests/math_57/  -dependencies  ./examples/libs/junit-4.4.jar  -flthreshold  0.5  -maxtime  100  -stopfirst  true]
2019-04-16 05:52:48,243 INFO main - -Executing Gzoltar classpath: /home/jan_gerling/astor/./outputMutation/AstorMain-math_57//bin//default from 260 classes with test cases
2019-04-16 05:52:48,243 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Gzoltar fault localization: min susp value parameter: 0.5
2019-04-16 05:52:48,937 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - -gz-Adding classpath: [/home/jan_gerling/astor/./examples/libs/junit-4.4.jar, /home/jan_gerling/astor/./outputMutation/AstorMain-math_57//bin//default]
2019-04-16 05:54:32,298 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Test failt: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances
2019-04-16 05:54:32,301 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Test failt: org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses
2019-04-16 05:54:32,308 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Gzoltar Test Result Total:2383, fails: 2, GZoltar suspicious 20119
2019-04-16 05:54:32,356 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Gzoltar found: 1000 with susp > 0.5, we consider: 1000
2019-04-16 05:54:32,367 INFO main - building model: /home/jan_gerling/astor/./outputMutation/AstorMain-math_57//src//default, compliance level: 8
2019-04-16 05:54:39,347 INFO main - 
---- Initial suspicious size: 997
2019-04-16 05:54:39,404 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{chooseInitialCenters(Ljava/util/Collection;ILjava/util/Random;)Ljava/util/List; 0.0, lineNumber=194, susp=0.4082482904638631]
2019-04-16 05:54:39,422 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V 0.0, lineNumber=149, susp=0.35355339059327373]
2019-04-16 05:54:39,423 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V 0.0, lineNumber=150, susp=0.35355339059327373]
2019-04-16 05:54:39,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math/stat/clustering/Clusterable;)Lorg/apache/commons/math/stat/clustering/Cluster; 0.0, lineNumber=329, susp=0.35355339059327373]
2019-04-16 05:54:39,461 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.Cluster, methodName=org.apache.commons.math.stat.clustering.Cluster{addPoint(Lorg/apache/commons/math/stat/clustering/Clusterable;)V 0.0, lineNumber=56, susp=0.35355339059327373]
2019-04-16 05:54:39,527 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed(J)V 0.0, lineNumber=211, susp=0.09053574604251853]
2019-04-16 05:54:39,577 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.Dfp, methodName=org.apache.commons.math.dfp.Dfp{round(I)I 0.0, lineNumber=1350, susp=0.08980265101338746]
2019-04-16 05:54:39,582 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.Dfp, methodName=org.apache.commons.math.dfp.Dfp{round(I)I 0.0, lineNumber=1351, susp=0.08980265101338746]
2019-04-16 05:54:39,678 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.DfpField, methodName=org.apache.commons.math.dfp.DfpField{setIEEEFlagsBits(I)V 0.0, lineNumber=329, susp=0.08980265101338746]
2019-04-16 05:54:39,765 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.DfpField, methodName=org.apache.commons.math.dfp.DfpField{computeStringConstants(I)V 0.0, lineNumber=593, susp=0.08980265101338746]
2019-04-16 05:54:39,808 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed([I)V 0.0, lineNumber=201, susp=0.0890870806374748]
2019-04-16 05:54:39,816 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed(I)V 0.0, lineNumber=152, susp=0.08638684255813601]
2019-04-16 05:54:39,878 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.SummaryStatistics, methodName=org.apache.commons.math.stat.descriptive.SummaryStatistics{addValue(D)V 0.0, lineNumber=166, susp=0.0]
2019-04-16 05:54:39,917 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.SummaryStatistics, methodName=org.apache.commons.math.stat.descriptive.SummaryStatistics{clear()V 0.0, lineNumber=347, susp=0.0]
2019-04-16 05:54:39,918 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.GeometricMean, methodName=org.apache.commons.math.stat.descriptive.moment.GeometricMean{clear()V 0.0, lineNumber=122, susp=0.0]
2019-04-16 05:54:39,921 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfSquares, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfSquares{increment(D)V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:39,923 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfSquares, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfSquares{clear()V 0.0, lineNumber=99, susp=0.0]
2019-04-16 05:54:40,096 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{split(D[D)V 0.0, lineNumber=1025, susp=0.0]
2019-04-16 05:54:40,101 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{split(D[D)V 0.0, lineNumber=1030, susp=0.0]
2019-04-16 05:54:40,148 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{resplit([D)V 0.0, lineNumber=1044, susp=0.0]
2019-04-16 05:54:40,174 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{resplit([D)V 0.0, lineNumber=1049, susp=0.0]
2019-04-16 05:54:40,207 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitMult([D[D[D)V 0.0, lineNumber=1062, susp=0.0]
2019-04-16 05:54:40,234 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitAdd([D[D[D)V 0.0, lineNumber=1074, susp=0.0]
2019-04-16 05:54:40,323 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitReciprocal([D[D)V 0.0, lineNumber=1122, susp=0.0]
2019-04-16 05:54:40,558 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{quadMult([D[D[D)V 0.0, lineNumber=1176, susp=0.0]
2019-04-16 05:54:41,840 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{buildSinCosTables()V 0.0, lineNumber=1938, susp=0.0]
2019-04-16 05:54:41,897 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{increment(D)V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:41,899 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{increment(D)V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:41,899 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{clear()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:41,900 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{clear()V 0.0, lineNumber=91, susp=0.0]
2019-04-16 05:54:41,910 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{addElement(D)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:41,914 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{clear()V 0.0, lineNumber=418, susp=0.0]
2019-04-16 05:54:41,918 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{contract()V 0.0, lineNumber=434, susp=0.0]
2019-04-16 05:54:41,925 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{expand()V 0.0, lineNumber=535, susp=0.0]
2019-04-16 05:54:41,931 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:41,931 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:41,931 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:41,931 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:41,931 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=70, susp=0.0]
2019-04-16 05:54:41,931 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=70, susp=0.0]
2019-04-16 05:54:41,931 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:41,931 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:41,931 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=49, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=49, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=50, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=50, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=52, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=52, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=53, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=53, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=56, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=56, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=59, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=59, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=60, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=60, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=62, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=62, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=63, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=63, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=71, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=71, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=72, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=72, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=73, susp=0.0]
2019-04-16 05:54:41,932 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=73, susp=0.0]
2019-04-16 05:54:41,932 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=77, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=77, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=81, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=81, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=83, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=83, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=86, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=86, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=90, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=90, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=93, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=93, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getMaximumAbsoluteError()D 0.0, lineNumber=98, susp=0.0]
2019-04-16 05:54:41,933 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getMaximumAbsoluteError()D 0.0, lineNumber=98, susp=0.0]
2019-04-16 05:54:41,933 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=103, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=103, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=104, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=104, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=106, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=106, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=109, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=109, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=110, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=110, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=111, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=111, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=114, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=114, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=115, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=115, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=117, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=117, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=119, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=119, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=120, susp=0.0]
2019-04-16 05:54:41,934 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=120, susp=0.0]
2019-04-16 05:54:41,934 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=121, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=121, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=124, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=124, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=125, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=125, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=126, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=126, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=127, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=127, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=128, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=128, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=130, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=130, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=131, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=131, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=137, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=137, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=138, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=138, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=139, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=139, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=140, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=140, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=141, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=141, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=142, susp=0.0]
2019-04-16 05:54:41,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=142, susp=0.0]
2019-04-16 05:54:41,935 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:41,936 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:41,936 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=153, susp=0.0]
2019-04-16 05:54:41,936 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=153, susp=0.0]
2019-04-16 05:54:41,936 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=154, susp=0.0]
2019-04-16 05:54:41,936 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=154, susp=0.0]
2019-04-16 05:54:41,957 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.Variance, methodName=org.apache.commons.math.stat.descriptive.moment.Variance{clear()V 0.0, lineNumber=196, susp=0.0]
2019-04-16 05:54:41,989 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.FirstMoment, methodName=org.apache.commons.math.stat.descriptive.moment.FirstMoment{increment(D)V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:41,992 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.FirstMoment, methodName=org.apache.commons.math.stat.descriptive.moment.FirstMoment{clear()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:41,994 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.Sum, methodName=org.apache.commons.math.stat.descriptive.summary.Sum{increment(D)V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:41,995 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.Sum, methodName=org.apache.commons.math.stat.descriptive.summary.Sum{clear()V 0.0, lineNumber=100, susp=0.0]
2019-04-16 05:54:42,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Min, methodName=org.apache.commons.math.stat.descriptive.rank.Min{increment(D)V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:42,009 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Min, methodName=org.apache.commons.math.stat.descriptive.rank.Min{clear()V 0.0, lineNumber=87, susp=0.0]
2019-04-16 05:54:42,016 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{addValue(D)V 0.0, lineNumber=168, susp=0.0]
2019-04-16 05:54:42,027 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{clear()V 0.0, lineNumber=299, susp=0.0]
2019-04-16 05:54:42,032 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Percentile, methodName=org.apache.commons.math.stat.descriptive.rank.Percentile{setQuantile(D)V 0.0, lineNumber=467, susp=0.0]
2019-04-16 05:54:42,035 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Max, methodName=org.apache.commons.math.stat.descriptive.rank.Max{increment(D)V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:42,036 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Max, methodName=org.apache.commons.math.stat.descriptive.rank.Max{clear()V 0.0, lineNumber=87, susp=0.0]
2019-04-16 05:54:42,038 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfLogs, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfLogs{increment(D)V 0.0, lineNumber=84, susp=0.0]
2019-04-16 05:54:42,039 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfLogs, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfLogs{clear()V 0.0, lineNumber=108, susp=0.0]
2019-04-16 05:54:42,040 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField$LazyHolder, methodName=org.apache.commons.math.fraction.FractionField$LazyHolder{access$000()Lorg/apache/commons/math/fraction/FractionField; 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:42,103 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.MathUtils, methodName=org.apache.commons.math.util.MathUtils{gcd(II)I 0.0, lineNumber=904, susp=0.0]
2019-04-16 05:54:42,137 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{buildArray(Lorg/apache/commons/math/Field;II)[[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:42,162 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=346, susp=0.0]
2019-04-16 05:54:42,162 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=346, susp=0.0]
2019-04-16 05:54:42,162 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=349, susp=0.0]
2019-04-16 05:54:42,162 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=349, susp=0.0]
2019-04-16 05:54:42,162 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=350, susp=0.0]
2019-04-16 05:54:42,162 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=350, susp=0.0]
2019-04-16 05:54:42,163 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=352, susp=0.0]
2019-04-16 05:54:42,163 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=352, susp=0.0]
2019-04-16 05:54:42,186 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setSubMatrix([[Lorg/apache/commons/math/FieldElement;II)V 0.0, lineNumber=289, susp=0.0]
2019-04-16 05:54:42,187 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setSubMatrix([[Lorg/apache/commons/math/FieldElement;II)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:42,212 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{copyIn([[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=536, susp=0.0]
2019-04-16 05:54:42,215 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField, methodName=org.apache.commons.math.fraction.FractionField{getZero()Ljava/lang/Object; 0.0, lineNumber=33, susp=0.0]
2019-04-16 05:54:42,245 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Lorg/apache/commons/math/fraction/Fraction;)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=545, susp=0.0]
2019-04-16 05:54:42,247 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Lorg/apache/commons/math/fraction/Fraction;)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=546, susp=0.0]
2019-04-16 05:54:42,328 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{getField()Lorg/apache/commons/math/Field; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:42,393 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:42,435 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{add(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:42,484 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkRowIndex(I)V 0.0, lineNumber=950, susp=0.0]
2019-04-16 05:54:42,488 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkColumnIndex(I)V 0.0, lineNumber=963, susp=0.0]
2019-04-16 05:54:42,492 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkMultiplicationCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1063, susp=0.0]
2019-04-16 05:54:42,756 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setEntry(IILorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=311, susp=0.0]
2019-04-16 05:54:42,763 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField, methodName=org.apache.commons.math.fraction.FractionField{getOne()Ljava/lang/Object; 0.0, lineNumber=33, susp=0.0]
2019-04-16 05:54:42,775 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=495, susp=0.0]
2019-04-16 05:54:42,777 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=496, susp=0.0]
2019-04-16 05:54:42,778 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=497, susp=0.0]
2019-04-16 05:54:42,780 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=503, susp=0.0]
2019-04-16 05:54:42,783 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=505, susp=0.0]
2019-04-16 05:54:42,793 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=519, susp=0.0]
2019-04-16 05:54:42,824 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{divide(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:42,851 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{subtract(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:42,863 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkRowIndex(I)V 0.0, lineNumber=948, susp=0.0]
2019-04-16 05:54:42,871 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1033, susp=0.0]
2019-04-16 05:54:42,876 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1031, susp=0.0]
2019-04-16 05:54:42,878 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1035, susp=0.0]
2019-04-16 05:54:42,910 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=290, susp=0.0]
2019-04-16 05:54:42,910 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=290, susp=0.0]
2019-04-16 05:54:42,910 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=292, susp=0.0]
2019-04-16 05:54:42,910 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=292, susp=0.0]
2019-04-16 05:54:42,910 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:42,911 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:42,911 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=303, susp=0.0]
2019-04-16 05:54:42,911 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=303, susp=0.0]
2019-04-16 05:54:42,911 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:42,911 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:42,911 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=305, susp=0.0]
2019-04-16 05:54:42,911 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=305, susp=0.0]
2019-04-16 05:54:42,911 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=306, susp=0.0]
2019-04-16 05:54:42,911 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=306, susp=0.0]
2019-04-16 05:54:42,911 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=307, susp=0.0]
2019-04-16 05:54:42,911 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=307, susp=0.0]
2019-04-16 05:54:42,911 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=310, susp=0.0]
2019-04-16 05:54:42,911 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=310, susp=0.0]
2019-04-16 05:54:42,953 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkSubMatrixIndex(IIII)V 0.0, lineNumber=992, susp=0.0]
2019-04-16 05:54:42,954 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor, methodName=org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor{start(IIIIII)V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:42,955 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor, methodName=org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor{start(IIIIII)V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:42,982 INFO main - Total suspicious from FL: 997,  851
2019-04-16 05:54:42,983 INFO main - Total ModPoint created: 851
2019-04-16 05:54:42,983 INFO main - Creating program variant #1, [Variant id: 1, #gens: 851, #ops: 0, parent:-]
2019-04-16 05:54:43,002 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{chooseInitialCenters(Ljava/util/Collection;ILjava/util/Random;)Ljava/util/List; 0.0, lineNumber=194, susp=0.4082482904638631]
2019-04-16 05:54:43,013 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V 0.0, lineNumber=149, susp=0.35355339059327373]
2019-04-16 05:54:43,014 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V 0.0, lineNumber=150, susp=0.35355339059327373]
2019-04-16 05:54:43,031 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math/stat/clustering/Clusterable;)Lorg/apache/commons/math/stat/clustering/Cluster; 0.0, lineNumber=329, susp=0.35355339059327373]
2019-04-16 05:54:43,035 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.Cluster, methodName=org.apache.commons.math.stat.clustering.Cluster{addPoint(Lorg/apache/commons/math/stat/clustering/Clusterable;)V 0.0, lineNumber=56, susp=0.35355339059327373]
2019-04-16 05:54:43,074 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed(J)V 0.0, lineNumber=211, susp=0.09053574604251853]
2019-04-16 05:54:43,111 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.Dfp, methodName=org.apache.commons.math.dfp.Dfp{round(I)I 0.0, lineNumber=1350, susp=0.08980265101338746]
2019-04-16 05:54:43,116 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.Dfp, methodName=org.apache.commons.math.dfp.Dfp{round(I)I 0.0, lineNumber=1351, susp=0.08980265101338746]
2019-04-16 05:54:43,196 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.DfpField, methodName=org.apache.commons.math.dfp.DfpField{setIEEEFlagsBits(I)V 0.0, lineNumber=329, susp=0.08980265101338746]
2019-04-16 05:54:43,265 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.DfpField, methodName=org.apache.commons.math.dfp.DfpField{computeStringConstants(I)V 0.0, lineNumber=593, susp=0.08980265101338746]
2019-04-16 05:54:43,295 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed([I)V 0.0, lineNumber=201, susp=0.0890870806374748]
2019-04-16 05:54:43,301 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed(I)V 0.0, lineNumber=152, susp=0.08638684255813601]
2019-04-16 05:54:43,361 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.SummaryStatistics, methodName=org.apache.commons.math.stat.descriptive.SummaryStatistics{addValue(D)V 0.0, lineNumber=166, susp=0.0]
2019-04-16 05:54:43,395 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.SummaryStatistics, methodName=org.apache.commons.math.stat.descriptive.SummaryStatistics{clear()V 0.0, lineNumber=347, susp=0.0]
2019-04-16 05:54:43,398 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.GeometricMean, methodName=org.apache.commons.math.stat.descriptive.moment.GeometricMean{clear()V 0.0, lineNumber=122, susp=0.0]
2019-04-16 05:54:43,400 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfSquares, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfSquares{increment(D)V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:43,402 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfSquares, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfSquares{clear()V 0.0, lineNumber=99, susp=0.0]
2019-04-16 05:54:43,579 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{split(D[D)V 0.0, lineNumber=1025, susp=0.0]
2019-04-16 05:54:43,585 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{split(D[D)V 0.0, lineNumber=1030, susp=0.0]
2019-04-16 05:54:43,638 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{resplit([D)V 0.0, lineNumber=1044, susp=0.0]
2019-04-16 05:54:43,668 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{resplit([D)V 0.0, lineNumber=1049, susp=0.0]
2019-04-16 05:54:43,697 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitMult([D[D[D)V 0.0, lineNumber=1062, susp=0.0]
2019-04-16 05:54:43,727 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitAdd([D[D[D)V 0.0, lineNumber=1074, susp=0.0]
2019-04-16 05:54:43,826 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitReciprocal([D[D)V 0.0, lineNumber=1122, susp=0.0]
2019-04-16 05:54:44,105 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{quadMult([D[D[D)V 0.0, lineNumber=1176, susp=0.0]
2019-04-16 05:54:45,357 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{buildSinCosTables()V 0.0, lineNumber=1938, susp=0.0]
2019-04-16 05:54:45,416 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{increment(D)V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:45,416 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{increment(D)V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:45,417 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{clear()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:45,418 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{clear()V 0.0, lineNumber=91, susp=0.0]
2019-04-16 05:54:45,427 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{addElement(D)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:45,431 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{clear()V 0.0, lineNumber=418, susp=0.0]
2019-04-16 05:54:45,435 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{contract()V 0.0, lineNumber=434, susp=0.0]
2019-04-16 05:54:45,442 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{expand()V 0.0, lineNumber=535, susp=0.0]
2019-04-16 05:54:45,446 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=70, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=70, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=49, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=49, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=50, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=50, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=52, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=52, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=53, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=53, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=56, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=56, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=59, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=59, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=60, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=60, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=62, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=62, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=63, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=63, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=71, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=71, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=72, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=72, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=73, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=73, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=77, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=77, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:45,447 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=81, susp=0.0]
2019-04-16 05:54:45,447 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=81, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=83, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=83, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=86, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=86, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=90, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=90, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=93, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=93, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getMaximumAbsoluteError()D 0.0, lineNumber=98, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getMaximumAbsoluteError()D 0.0, lineNumber=98, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=103, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=103, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=104, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=104, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=106, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=106, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=109, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=109, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=110, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=110, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=111, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=111, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=114, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=114, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=115, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=115, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=117, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=117, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=119, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=119, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=120, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=120, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=121, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=121, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=124, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=124, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=125, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=125, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=126, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=126, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=127, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=127, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=128, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=128, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=130, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=130, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=131, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=131, susp=0.0]
2019-04-16 05:54:45,448 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=137, susp=0.0]
2019-04-16 05:54:45,448 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=137, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=138, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=138, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=139, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=139, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=140, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=140, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=141, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=141, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=142, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=142, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=153, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=153, susp=0.0]
2019-04-16 05:54:45,449 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=154, susp=0.0]
2019-04-16 05:54:45,449 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=154, susp=0.0]
2019-04-16 05:54:45,462 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.Variance, methodName=org.apache.commons.math.stat.descriptive.moment.Variance{clear()V 0.0, lineNumber=196, susp=0.0]
2019-04-16 05:54:45,489 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.FirstMoment, methodName=org.apache.commons.math.stat.descriptive.moment.FirstMoment{increment(D)V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:45,491 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.FirstMoment, methodName=org.apache.commons.math.stat.descriptive.moment.FirstMoment{clear()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:45,493 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.Sum, methodName=org.apache.commons.math.stat.descriptive.summary.Sum{increment(D)V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:45,494 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.Sum, methodName=org.apache.commons.math.stat.descriptive.summary.Sum{clear()V 0.0, lineNumber=100, susp=0.0]
2019-04-16 05:54:45,505 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Min, methodName=org.apache.commons.math.stat.descriptive.rank.Min{increment(D)V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:45,506 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Min, methodName=org.apache.commons.math.stat.descriptive.rank.Min{clear()V 0.0, lineNumber=87, susp=0.0]
2019-04-16 05:54:45,512 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{addValue(D)V 0.0, lineNumber=168, susp=0.0]
2019-04-16 05:54:45,523 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{clear()V 0.0, lineNumber=299, susp=0.0]
2019-04-16 05:54:45,528 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Percentile, methodName=org.apache.commons.math.stat.descriptive.rank.Percentile{setQuantile(D)V 0.0, lineNumber=467, susp=0.0]
2019-04-16 05:54:45,530 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Max, methodName=org.apache.commons.math.stat.descriptive.rank.Max{increment(D)V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:45,532 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Max, methodName=org.apache.commons.math.stat.descriptive.rank.Max{clear()V 0.0, lineNumber=87, susp=0.0]
2019-04-16 05:54:45,533 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfLogs, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfLogs{increment(D)V 0.0, lineNumber=84, susp=0.0]
2019-04-16 05:54:45,535 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfLogs, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfLogs{clear()V 0.0, lineNumber=108, susp=0.0]
2019-04-16 05:54:45,535 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField$LazyHolder, methodName=org.apache.commons.math.fraction.FractionField$LazyHolder{access$000()Lorg/apache/commons/math/fraction/FractionField; 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:45,593 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.MathUtils, methodName=org.apache.commons.math.util.MathUtils{gcd(II)I 0.0, lineNumber=904, susp=0.0]
2019-04-16 05:54:45,623 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{buildArray(Lorg/apache/commons/math/Field;II)[[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:45,647 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=346, susp=0.0]
2019-04-16 05:54:45,647 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=346, susp=0.0]
2019-04-16 05:54:45,647 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=349, susp=0.0]
2019-04-16 05:54:45,647 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=349, susp=0.0]
2019-04-16 05:54:45,647 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=350, susp=0.0]
2019-04-16 05:54:45,647 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=350, susp=0.0]
2019-04-16 05:54:45,647 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=352, susp=0.0]
2019-04-16 05:54:45,647 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=352, susp=0.0]
2019-04-16 05:54:45,668 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setSubMatrix([[Lorg/apache/commons/math/FieldElement;II)V 0.0, lineNumber=289, susp=0.0]
2019-04-16 05:54:45,669 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setSubMatrix([[Lorg/apache/commons/math/FieldElement;II)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:45,687 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{copyIn([[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=536, susp=0.0]
2019-04-16 05:54:45,689 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField, methodName=org.apache.commons.math.fraction.FractionField{getZero()Ljava/lang/Object; 0.0, lineNumber=33, susp=0.0]
2019-04-16 05:54:45,710 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Lorg/apache/commons/math/fraction/Fraction;)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=545, susp=0.0]
2019-04-16 05:54:45,711 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Lorg/apache/commons/math/fraction/Fraction;)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=546, susp=0.0]
2019-04-16 05:54:45,739 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{getField()Lorg/apache/commons/math/Field; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:45,758 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:45,775 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{add(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:45,824 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkRowIndex(I)V 0.0, lineNumber=950, susp=0.0]
2019-04-16 05:54:45,827 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkColumnIndex(I)V 0.0, lineNumber=963, susp=0.0]
2019-04-16 05:54:45,831 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkMultiplicationCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1063, susp=0.0]
2019-04-16 05:54:46,051 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setEntry(IILorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=311, susp=0.0]
2019-04-16 05:54:46,058 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField, methodName=org.apache.commons.math.fraction.FractionField{getOne()Ljava/lang/Object; 0.0, lineNumber=33, susp=0.0]
2019-04-16 05:54:46,070 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=495, susp=0.0]
2019-04-16 05:54:46,071 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=496, susp=0.0]
2019-04-16 05:54:46,072 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=497, susp=0.0]
2019-04-16 05:54:46,075 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=503, susp=0.0]
2019-04-16 05:54:46,077 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=505, susp=0.0]
2019-04-16 05:54:46,085 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=519, susp=0.0]
2019-04-16 05:54:46,106 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{divide(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:46,124 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{subtract(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:46,134 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkRowIndex(I)V 0.0, lineNumber=948, susp=0.0]
2019-04-16 05:54:46,139 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1033, susp=0.0]
2019-04-16 05:54:46,142 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1031, susp=0.0]
2019-04-16 05:54:46,144 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1035, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=290, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=290, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=292, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=292, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=303, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=303, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=305, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=305, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=306, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=306, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=307, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=307, susp=0.0]
2019-04-16 05:54:46,169 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=310, susp=0.0]
2019-04-16 05:54:46,169 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=310, susp=0.0]
2019-04-16 05:54:46,206 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkSubMatrixIndex(IIII)V 0.0, lineNumber=992, susp=0.0]
2019-04-16 05:54:46,207 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor, methodName=org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor{start(IIIIII)V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:46,207 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor, methodName=org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor{start(IIIIII)V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:46,227 INFO main - Total suspicious from FL: 997,  851
2019-04-16 05:54:46,227 INFO main - Total ModPoint created: 851
2019-04-16 05:54:46,227 INFO main - Creating program variant #2, [Variant id: 2, #gens: 851, #ops: 0, parent:-]
2019-04-16 05:54:46,240 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{chooseInitialCenters(Ljava/util/Collection;ILjava/util/Random;)Ljava/util/List; 0.0, lineNumber=194, susp=0.4082482904638631]
2019-04-16 05:54:46,248 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V 0.0, lineNumber=149, susp=0.35355339059327373]
2019-04-16 05:54:46,248 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V 0.0, lineNumber=150, susp=0.35355339059327373]
2019-04-16 05:54:46,258 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer, methodName=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer{getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math/stat/clustering/Clusterable;)Lorg/apache/commons/math/stat/clustering/Cluster; 0.0, lineNumber=329, susp=0.35355339059327373]
2019-04-16 05:54:46,261 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.clustering.Cluster, methodName=org.apache.commons.math.stat.clustering.Cluster{addPoint(Lorg/apache/commons/math/stat/clustering/Clusterable;)V 0.0, lineNumber=56, susp=0.35355339059327373]
2019-04-16 05:54:46,289 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed(J)V 0.0, lineNumber=211, susp=0.09053574604251853]
2019-04-16 05:54:46,319 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.Dfp, methodName=org.apache.commons.math.dfp.Dfp{round(I)I 0.0, lineNumber=1350, susp=0.08980265101338746]
2019-04-16 05:54:46,323 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.Dfp, methodName=org.apache.commons.math.dfp.Dfp{round(I)I 0.0, lineNumber=1351, susp=0.08980265101338746]
2019-04-16 05:54:46,390 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.DfpField, methodName=org.apache.commons.math.dfp.DfpField{setIEEEFlagsBits(I)V 0.0, lineNumber=329, susp=0.08980265101338746]
2019-04-16 05:54:46,446 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.dfp.DfpField, methodName=org.apache.commons.math.dfp.DfpField{computeStringConstants(I)V 0.0, lineNumber=593, susp=0.08980265101338746]
2019-04-16 05:54:46,466 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed([I)V 0.0, lineNumber=201, susp=0.0890870806374748]
2019-04-16 05:54:46,470 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.random.MersenneTwister, methodName=org.apache.commons.math.random.MersenneTwister{setSeed(I)V 0.0, lineNumber=152, susp=0.08638684255813601]
2019-04-16 05:54:46,513 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.SummaryStatistics, methodName=org.apache.commons.math.stat.descriptive.SummaryStatistics{addValue(D)V 0.0, lineNumber=166, susp=0.0]
2019-04-16 05:54:46,538 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.SummaryStatistics, methodName=org.apache.commons.math.stat.descriptive.SummaryStatistics{clear()V 0.0, lineNumber=347, susp=0.0]
2019-04-16 05:54:46,540 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.GeometricMean, methodName=org.apache.commons.math.stat.descriptive.moment.GeometricMean{clear()V 0.0, lineNumber=122, susp=0.0]
2019-04-16 05:54:46,542 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfSquares, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfSquares{increment(D)V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:46,543 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfSquares, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfSquares{clear()V 0.0, lineNumber=99, susp=0.0]
2019-04-16 05:54:46,687 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{split(D[D)V 0.0, lineNumber=1025, susp=0.0]
2019-04-16 05:54:46,691 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{split(D[D)V 0.0, lineNumber=1030, susp=0.0]
2019-04-16 05:54:46,736 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{resplit([D)V 0.0, lineNumber=1044, susp=0.0]
2019-04-16 05:54:46,760 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{resplit([D)V 0.0, lineNumber=1049, susp=0.0]
2019-04-16 05:54:46,784 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitMult([D[D[D)V 0.0, lineNumber=1062, susp=0.0]
2019-04-16 05:54:46,807 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitAdd([D[D[D)V 0.0, lineNumber=1074, susp=0.0]
2019-04-16 05:54:46,883 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{splitReciprocal([D[D)V 0.0, lineNumber=1122, susp=0.0]
2019-04-16 05:54:47,091 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{quadMult([D[D[D)V 0.0, lineNumber=1176, susp=0.0]
2019-04-16 05:54:48,234 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{buildSinCosTables()V 0.0, lineNumber=1938, susp=0.0]
2019-04-16 05:54:48,293 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{increment(D)V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:48,294 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{increment(D)V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:48,295 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{clear()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:48,295 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.SecondMoment, methodName=org.apache.commons.math.stat.descriptive.moment.SecondMoment{clear()V 0.0, lineNumber=91, susp=0.0]
2019-04-16 05:54:48,305 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{addElement(D)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:48,309 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{clear()V 0.0, lineNumber=418, susp=0.0]
2019-04-16 05:54:48,313 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{contract()V 0.0, lineNumber=434, susp=0.0]
2019-04-16 05:54:48,319 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.ResizableDoubleArray, methodName=org.apache.commons.math.util.ResizableDoubleArray{expand()V 0.0, lineNumber=535, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=70, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Ljava/lang/String;DDD)V 0.0, lineNumber=70, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=49, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=49, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=50, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=50, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=52, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=52, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=53, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{setUp()V 0.0, lineNumber=53, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=56, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=56, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=59, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=59, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=60, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=60, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=62, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=62, susp=0.0]
2019-04-16 05:54:48,325 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=63, susp=0.0]
2019-04-16 05:54:48,325 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=63, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=68, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=71, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=71, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=72, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=72, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=73, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=73, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=75, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=77, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=77, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=80, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=81, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=81, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=82, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=83, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=83, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=86, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=86, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=89, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=90, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=90, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=93, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{loadData()V 0.0, lineNumber=93, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getMaximumAbsoluteError()D 0.0, lineNumber=98, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getMaximumAbsoluteError()D 0.0, lineNumber=98, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=103, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=103, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=104, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=104, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=106, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=106, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=109, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=109, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=110, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=110, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=111, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{tearDown()V 0.0, lineNumber=111, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=114, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=114, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=115, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=115, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=117, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=117, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=119, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=119, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=120, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=120, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=121, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=121, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=124, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=124, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=125, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=125, susp=0.0]
2019-04-16 05:54:48,326 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=126, susp=0.0]
2019-04-16 05:54:48,326 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=126, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=127, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=127, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=128, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=128, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=130, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=130, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=131, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{testCertifiedValues()V 0.0, lineNumber=131, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=137, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=137, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=138, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=138, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=139, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=139, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=140, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=140, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=141, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=141, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=142, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=142, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=153, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=153, susp=0.0]
2019-04-16 05:54:48,327 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=154, susp=0.0]
2019-04-16 05:54:48,327 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.data.CertifiedDataAbstractTest, methodName=org.apache.commons.math.stat.data.CertifiedDataAbstractTest{getProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Double; 0.0, lineNumber=154, susp=0.0]
2019-04-16 05:54:48,340 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.Variance, methodName=org.apache.commons.math.stat.descriptive.moment.Variance{clear()V 0.0, lineNumber=196, susp=0.0]
2019-04-16 05:54:48,363 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.FirstMoment, methodName=org.apache.commons.math.stat.descriptive.moment.FirstMoment{increment(D)V 0.0, lineNumber=107, susp=0.0]
2019-04-16 05:54:48,366 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.moment.FirstMoment, methodName=org.apache.commons.math.stat.descriptive.moment.FirstMoment{clear()V 0.0, lineNumber=118, susp=0.0]
2019-04-16 05:54:48,368 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.Sum, methodName=org.apache.commons.math.stat.descriptive.summary.Sum{increment(D)V 0.0, lineNumber=76, susp=0.0]
2019-04-16 05:54:48,369 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.Sum, methodName=org.apache.commons.math.stat.descriptive.summary.Sum{clear()V 0.0, lineNumber=100, susp=0.0]
2019-04-16 05:54:48,379 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Min, methodName=org.apache.commons.math.stat.descriptive.rank.Min{increment(D)V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:48,380 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Min, methodName=org.apache.commons.math.stat.descriptive.rank.Min{clear()V 0.0, lineNumber=87, susp=0.0]
2019-04-16 05:54:48,386 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{addValue(D)V 0.0, lineNumber=168, susp=0.0]
2019-04-16 05:54:48,396 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{clear()V 0.0, lineNumber=299, susp=0.0]
2019-04-16 05:54:48,401 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Percentile, methodName=org.apache.commons.math.stat.descriptive.rank.Percentile{setQuantile(D)V 0.0, lineNumber=467, susp=0.0]
2019-04-16 05:54:48,404 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Max, methodName=org.apache.commons.math.stat.descriptive.rank.Max{increment(D)V 0.0, lineNumber=78, susp=0.0]
2019-04-16 05:54:48,405 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.rank.Max, methodName=org.apache.commons.math.stat.descriptive.rank.Max{clear()V 0.0, lineNumber=87, susp=0.0]
2019-04-16 05:54:48,408 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfLogs, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfLogs{increment(D)V 0.0, lineNumber=84, susp=0.0]
2019-04-16 05:54:48,409 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.stat.descriptive.summary.SumOfLogs, methodName=org.apache.commons.math.stat.descriptive.summary.SumOfLogs{clear()V 0.0, lineNumber=108, susp=0.0]
2019-04-16 05:54:48,409 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField$LazyHolder, methodName=org.apache.commons.math.fraction.FractionField$LazyHolder{access$000()Lorg/apache/commons/math/fraction/FractionField; 0.0, lineNumber=64, susp=0.0]
2019-04-16 05:54:48,466 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.util.MathUtils, methodName=org.apache.commons.math.util.MathUtils{gcd(II)I 0.0, lineNumber=904, susp=0.0]
2019-04-16 05:54:48,495 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{buildArray(Lorg/apache/commons/math/Field;II)[[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=143, susp=0.0]
2019-04-16 05:54:48,519 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=346, susp=0.0]
2019-04-16 05:54:48,519 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=346, susp=0.0]
2019-04-16 05:54:48,519 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=349, susp=0.0]
2019-04-16 05:54:48,519 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=349, susp=0.0]
2019-04-16 05:54:48,519 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=350, susp=0.0]
2019-04-16 05:54:48,519 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=350, susp=0.0]
2019-04-16 05:54:48,519 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=352, susp=0.0]
2019-04-16 05:54:48,519 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals([Lorg/apache/commons/math/FieldElement;[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=352, susp=0.0]
2019-04-16 05:54:48,539 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setSubMatrix([[Lorg/apache/commons/math/FieldElement;II)V 0.0, lineNumber=289, susp=0.0]
2019-04-16 05:54:48,540 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setSubMatrix([[Lorg/apache/commons/math/FieldElement;II)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:48,557 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{copyIn([[Lorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=536, susp=0.0]
2019-04-16 05:54:48,559 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField, methodName=org.apache.commons.math.fraction.FractionField{getZero()Ljava/lang/Object; 0.0, lineNumber=33, susp=0.0]
2019-04-16 05:54:48,580 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Lorg/apache/commons/math/fraction/Fraction;)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=545, susp=0.0]
2019-04-16 05:54:48,581 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Lorg/apache/commons/math/fraction/Fraction;)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=546, susp=0.0]
2019-04-16 05:54:48,604 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{getField()Lorg/apache/commons/math/Field; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:48,617 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{multiply(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:48,630 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{add(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:48,677 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkRowIndex(I)V 0.0, lineNumber=950, susp=0.0]
2019-04-16 05:54:48,681 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkColumnIndex(I)V 0.0, lineNumber=963, susp=0.0]
2019-04-16 05:54:48,684 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkMultiplicationCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1063, susp=0.0]
2019-04-16 05:54:48,902 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.Array2DRowFieldMatrix, methodName=org.apache.commons.math.linear.Array2DRowFieldMatrix{setEntry(IILorg/apache/commons/math/FieldElement;)V 0.0, lineNumber=311, susp=0.0]
2019-04-16 05:54:48,909 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.FractionField, methodName=org.apache.commons.math.fraction.FractionField{getOne()Ljava/lang/Object; 0.0, lineNumber=33, susp=0.0]
2019-04-16 05:54:48,921 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=495, susp=0.0]
2019-04-16 05:54:48,922 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=496, susp=0.0]
2019-04-16 05:54:48,924 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=497, susp=0.0]
2019-04-16 05:54:48,926 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=503, susp=0.0]
2019-04-16 05:54:48,928 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=505, susp=0.0]
2019-04-16 05:54:48,935 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction; 0.0, lineNumber=519, susp=0.0]
2019-04-16 05:54:48,951 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{divide(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:48,964 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.fraction.Fraction, methodName=org.apache.commons.math.fraction.Fraction{subtract(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=37, susp=0.0]
2019-04-16 05:54:48,973 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkRowIndex(I)V 0.0, lineNumber=948, susp=0.0]
2019-04-16 05:54:48,979 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1033, susp=0.0]
2019-04-16 05:54:48,982 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1031, susp=0.0]
2019-04-16 05:54:48,983 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkAdditionCompatible(Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=1035, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=290, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=290, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=292, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=292, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=293, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=303, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=303, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=304, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=305, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=305, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=306, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=306, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=307, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=307, susp=0.0]
2019-04-16 05:54:49,008 INFO main -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=310, susp=0.0]
2019-04-16 05:54:49,008 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.TestUtils, methodName=org.apache.commons.math.TestUtils{assertEquals(Lorg/apache/commons/math/linear/FieldMatrix;Lorg/apache/commons/math/linear/FieldMatrix;)V 0.0, lineNumber=310, susp=0.0]
2019-04-16 05:54:49,043 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{checkSubMatrixIndex(IIII)V 0.0, lineNumber=992, susp=0.0]
2019-04-16 05:54:49,043 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor, methodName=org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor{start(IIIIII)V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:49,044 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor, methodName=org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor{start(IIIIII)V 0.0, lineNumber=48, susp=0.0]
2019-04-16 05:54:49,063 INFO main - Total suspicious from FL: 997,  851
2019-04-16 05:54:49,063 INFO main - Total ModPoint created: 851
2019-04-16 05:54:49,063 INFO main - Creating program variant #3, [Variant id: 3, #gens: 851, #ops: 0, parent:-]
2019-04-16 05:57:16,043 INFO fr.inria.astor.core.setup.ConfigurationProperties - ----------------------------
2019-04-16 05:57:16,043 INFO fr.inria.astor.core.setup.ConfigurationProperties - ---Configuration properties:---Execution values
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:faultlocalization= fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:packageToInstrument= 
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:flthreshold= 0.5
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:numberExecutions= 1
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evosuiteresultfolder= evosuite
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:ignoredTestCases= 
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:skipfaultlocalization= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:maxGeneration= 200
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:maxsuspcandidates= 1000
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:tmax2= 960000
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:tmax1= 120000
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:workingDirectory= /home/jan_gerling/astor/./outputMutation
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:mode= jgenprog
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:ignoreflakyinfl= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:uniqueoptogen= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:pathToMVNRepository= 
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:timezone= America/Los_Angeles
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:applyCrossover= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:clonegranularity= types
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:modificationpointnavigation= weight
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:clusteringfilename= clustering.csv
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:maxtime= 100
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:probagenmutation= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:alternativecompliancelevel= 4
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:version-location= ./math-version/
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:location= /home/jan_gerling/astor/defect4j_tests/math_57/
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:filterfaultlocalization= true
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:stopfirst= true
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:jvm4testexecution= /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:bugId= 280
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:mutationrate= 1 
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:forceExecuteRegression= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:projectIdentifier= 
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evo_buggy_class= true
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evoRunOnBuggyClass= true
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:resetoperations= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:seed= 0
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:testbystep= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:srctestfolder= /src/test/
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:javacompliancelevel= 8
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:bintestfolder= /target/test-classes/
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:fitnessfunction= fr.inria.astor.core.loop.population.TestCaseFitnessFunction
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:commandTrunk= 50000
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:dependenciespath= ./examples/libs/junit-4.4.jar
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:multipointmodification= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:transformingredient= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:validation= process
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:scope= package
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evosuitetimeout= 120
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evoDSE= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:elementsToMutate= 10
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:allpoints= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:resourcesfolder= /src/main/resources:/src/test/resources:
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:regressionforfaultlocalization= true
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:population= 3
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:saveall= false
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:pvariantfoldername= variant-
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:populationcontroller= fr.inria.astor.core.loop.population.TestCaseBasedFitnessPopulationController
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:savesolution= true
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:srcjavafolder= /src/java/
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evo_affected_by_op= true
2019-04-16 05:57:16,044 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:binjavafolder= /target/classes/
2019-04-16 05:57:16,045 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:reintroduce= original-parents
2019-04-16 05:57:16,045 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
2019-04-16 05:57:16,045 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:learningdir= 
2019-04-16 05:57:16,045 INFO fr.inria.astor.core.setup.ConfigurationProperties - ----------------------------
2019-04-16 05:57:16,045 INFO main - 
----Starting Solution Search
2019-04-16 06:00:02,074 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:00:02,074 ERROR main - Undo Error: original: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9')) {
				leading = false;
			}
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading)) {
				sig++;
			}
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp)) {
				buf[i] = '0';
			}
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:00:02,078 ERROR main - Undo Error: modified: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9'))
				leading = false;
			
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading)) {
				sig++;
			}
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp)) {
				buf[i] = '0';
			}
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:00:14,239 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:00:14,239 ERROR main - Undo Error: original: 
public class KMeansPlusPlusClusterer<T extends org.apache.commons.math.stat.clustering.Clusterable<T>> {
	public static enum EmptyClusterStrategy {
LARGEST_VARIANCE, LARGEST_POINTS_NUMBER, FARTHEST_POINT, ERROR;	}

	private final java.util.Random random;

	private final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy;

	public KMeansPlusPlusClusterer(final java.util.Random random) {
		this(random, org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy.LARGEST_VARIANCE);
	}

	public KMeansPlusPlusClusterer(final java.util.Random random, final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy) {
		this.random = random;
		this.emptyStrategy = emptyStrategy;
	}

	public java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> cluster(final java.util.Collection<T> points, final int k, final int maxIterations) {
		java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> clusters = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(points, k, random);
		org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(clusters, points);
		final int max = (maxIterations < 0) ? java.lang.Integer.MAX_VALUE : maxIterations;
		for (int count = 0; count < max; count++) {
			boolean clusteringChanged = false;
			java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> newClusters = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
			for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
				final T newCenter;
				if (cluster.getPoints().isEmpty()) {
					switch (emptyStrategy) {
						case LARGEST_VARIANCE :
							newCenter = getPointFromLargestVarianceCluster(clusters);
							break;
						case LARGEST_POINTS_NUMBER :
							newCenter = getPointFromLargestNumberCluster(clusters);
							break;
						case FARTHEST_POINT :
							newCenter = getFarthestPoint(clusters);
							break;
						default :
							throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
					}
					clusteringChanged = true;
				}else {
					newCenter = cluster.getCenter().centroidOf(cluster.getPoints());
					if (!(newCenter.equals(cluster.getCenter()))) {
						clusteringChanged = true;
					}
				}
				newClusters.add(new org.apache.commons.math.stat.clustering.Cluster<T>(newCenter));
			}
			if (!clusteringChanged) {
				return clusters;
			}
			org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(newClusters, points);
			clusters = newClusters;
		}
		return clusters;
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> void assignPointsToClusters(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final java.util.Collection<T> points) {
		for (final T p : points) {
			org.apache.commons.math.stat.clustering.Cluster<T> cluster = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(clusters, p);
			cluster.addPoint(p);
		}
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> chooseInitialCenters(final java.util.Collection<T> points, final int k, final java.util.Random random) {
		final java.util.List<T> pointSet = new java.util.ArrayList<T>(points);
		final java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> resultSet = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
		final T firstPoint = pointSet.remove(random.nextInt(pointSet.size()));
		resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(firstPoint));
		final double[] dx2 = new double[pointSet.size()];
		while ((resultSet.size()) < k) {
			int sum = 0;
			for (int i = 0; i < (pointSet.size()); i++) {
				final T p = pointSet.get(i);
				final org.apache.commons.math.stat.clustering.Cluster<T> nearest = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(resultSet, p);
				final double d = p.distanceFrom(nearest.getCenter());
				sum += d * d;
				dx2[i] = sum;
			}
			final double r = (random.nextDouble()) * sum;
			for (int i = 0; i < (dx2.length); i++) {
				if ((dx2[i]) >= r) {
					final T p = pointSet.remove(i);
					resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(p));
					break;
				}
			}
		} 
		return resultSet;
	}

	private T getPointFromLargestVarianceCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxVariance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			if (!(cluster.getPoints().isEmpty())) {
				final T center = cluster.getCenter();
				final org.apache.commons.math.stat.descriptive.moment.Variance stat = new org.apache.commons.math.stat.descriptive.moment.Variance();
				for (final T point : cluster.getPoints()) {
					stat.increment(point.distanceFrom(center));
				}
				final double variance = stat.getResult();
				if (variance > maxVariance) {
					maxVariance = variance;
					selected = cluster;
				}
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getPointFromLargestNumberCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		int maxNumber = 0;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final int number = cluster.getPoints().size();
			if (number > maxNumber) {
				maxNumber = number;
				selected = cluster;
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getFarthestPoint(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxDistance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selectedCluster = null;
		int selectedPoint = -1;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final T center = cluster.getCenter();
			final java.util.List<T> points = cluster.getPoints();
			for (int i = 0; i < (points.size()); ++i) {
				final double distance = points.get(i).distanceFrom(center);
				if (distance > maxDistance) {
					maxDistance = distance;
					selectedCluster = cluster;
					selectedPoint = i;
				}
			}
		}
		if (selectedCluster == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		return selectedCluster.getPoints().remove(selectedPoint);
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> org.apache.commons.math.stat.clustering.Cluster<T> getNearestCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final T point) {
		double minDistance = java.lang.Double.MAX_VALUE;
		org.apache.commons.math.stat.clustering.Cluster<T> minCluster = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> c : clusters) {
			final double distance = point.distanceFrom(c.getCenter());
			if (distance < minDistance) {
				minDistance = distance;
				minCluster = c;
			}
		}
		return minCluster;
	}
}
2019-04-16 06:00:14,240 ERROR main - Undo Error: modified: 
public class KMeansPlusPlusClusterer<T extends org.apache.commons.math.stat.clustering.Clusterable<T>> {
	public static enum EmptyClusterStrategy {
LARGEST_VARIANCE, LARGEST_POINTS_NUMBER, FARTHEST_POINT, ERROR;	}

	private final java.util.Random random;

	private final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy;

	public KMeansPlusPlusClusterer(final java.util.Random random) {
		this(random, org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy.LARGEST_VARIANCE);
	}

	public KMeansPlusPlusClusterer(final java.util.Random random, final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy) {
		this.random = random;
		this.emptyStrategy = emptyStrategy;
	}

	public java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> cluster(final java.util.Collection<T> points, final int k, final int maxIterations) {
		java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> clusters = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(points, k, random);
		org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(clusters, points);
		final int max = (maxIterations < 0) ? java.lang.Integer.MAX_VALUE : maxIterations;
		for (int count = 0; count < max; count++) {
			boolean clusteringChanged = false;
			java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> newClusters = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
			for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
				final T newCenter;
				if (cluster.getPoints().isEmpty()) {
					switch (emptyStrategy) {
						case LARGEST_VARIANCE :
							newCenter = getPointFromLargestVarianceCluster(clusters);
							break;
						case LARGEST_POINTS_NUMBER :
							newCenter = getPointFromLargestNumberCluster(clusters);
							break;
						case FARTHEST_POINT :
							newCenter = getFarthestPoint(clusters);
							break;
						default :
							throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
					}
					clusteringChanged = true;
				}else {
					newCenter = cluster.getCenter().centroidOf(cluster.getPoints());
					if (!(newCenter.equals(cluster.getCenter()))) {
						clusteringChanged = true;
					}
				}
				newClusters.add(new org.apache.commons.math.stat.clustering.Cluster<T>(newCenter));
			}
			if (!clusteringChanged) {
				return clusters;
			}
			org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(newClusters, points);
			clusters = newClusters;
		}
		return clusters;
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> void assignPointsToClusters(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final java.util.Collection<T> points) {
		for (final T p : points) {
			org.apache.commons.math.stat.clustering.Cluster<T> cluster = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(clusters, p);
			cluster.addPoint(p);
		}
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> chooseInitialCenters(final java.util.Collection<T> points, final int k, final java.util.Random random) {
		final java.util.List<T> pointSet = new java.util.ArrayList<T>(points);
		final java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> resultSet = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
		final T firstPoint = pointSet.remove(random.nextInt(pointSet.size()));
		resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(firstPoint));
		final double[] dx2 = new double[pointSet.size()];
		while ((resultSet.size()) < k) {
			int sum = 0;
			for (int i = 0; i < (pointSet.size()); i++) {
				final T p = pointSet.get(i);
				final org.apache.commons.math.stat.clustering.Cluster<T> nearest = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(resultSet, p);
				final double d = p.distanceFrom(nearest.getCenter());
				sum += d * d;
				dx2[i] = sum;
			}
			final double r = (random.nextDouble()) * sum;
			for (int i = 0; i < (dx2.length); i++)
				if ((dx2[i]) >= r) {
					final T p = pointSet.remove(i);
					resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(p));
					break;
				}
			
		} 
		return resultSet;
	}

	private T getPointFromLargestVarianceCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxVariance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			if (!(cluster.getPoints().isEmpty())) {
				final T center = cluster.getCenter();
				final org.apache.commons.math.stat.descriptive.moment.Variance stat = new org.apache.commons.math.stat.descriptive.moment.Variance();
				for (final T point : cluster.getPoints()) {
					stat.increment(point.distanceFrom(center));
				}
				final double variance = stat.getResult();
				if (variance > maxVariance) {
					maxVariance = variance;
					selected = cluster;
				}
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getPointFromLargestNumberCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		int maxNumber = 0;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final int number = cluster.getPoints().size();
			if (number > maxNumber) {
				maxNumber = number;
				selected = cluster;
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getFarthestPoint(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxDistance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selectedCluster = null;
		int selectedPoint = -1;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final T center = cluster.getCenter();
			final java.util.List<T> points = cluster.getPoints();
			for (int i = 0; i < (points.size()); ++i) {
				final double distance = points.get(i).distanceFrom(center);
				if (distance > maxDistance) {
					maxDistance = distance;
					selectedCluster = cluster;
					selectedPoint = i;
				}
			}
		}
		if (selectedCluster == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		return selectedCluster.getPoints().remove(selectedPoint);
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> org.apache.commons.math.stat.clustering.Cluster<T> getNearestCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final T point) {
		double minDistance = java.lang.Double.MAX_VALUE;
		org.apache.commons.math.stat.clustering.Cluster<T> minCluster = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> c : clusters) {
			final double distance = point.distanceFrom(c.getCenter());
			if (distance < minDistance) {
				minDistance = distance;
				minCluster = c;
			}
		}
		return minCluster;
	}
}
2019-04-16 06:00:51,107 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:00:51,107 ERROR main - Undo Error: original: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++) {
			if ((point[i]) != (otherPoint[i])) {
				return false;
			}
		}
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:00:51,107 ERROR main - Undo Error: modified: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++) {
			if ((point[i]) != (otherPoint[i]))
				return false;
			
		}
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:02:03,802 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:02:03,802 ERROR main - Undo Error: original: 
public class MersenneTwister extends org.apache.commons.math.random.BitsStreamGenerator implements java.io.Serializable {
	private static final long serialVersionUID = 8661194735290153518L;

	private static final int N = 624;

	private static final int M = 397;

	private static final int[] MAG01 = new int[]{ 0 , -1727483681 };

	private int[] mt;

	private int mti;

	public MersenneTwister() {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(java.lang.System.currentTimeMillis());
	}

	public MersenneTwister(int seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(int[] seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(long seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	@java.lang.Override
	public void setSeed(int seed) {
		long longMT = seed;
		mt[0] = ((int) (longMT));
		for (mti = 1; (mti) < (org.apache.commons.math.random.MersenneTwister.N); ++(mti)) {
			longMT = ((1812433253L * (longMT ^ (longMT >> 30))) + (mti)) & 4294967295L;
			mt[mti] = ((int) (longMT));
		}
	}

	@java.lang.Override
	public void setSeed(int[] seed) {
		if (seed == null) {
			setSeed(java.lang.System.currentTimeMillis());
			return ;
		}
		setSeed(19650218);
		int i = 1;
		int j = 0;
		for (int k = org.apache.commons.math.util.FastMath.max(org.apache.commons.math.random.MersenneTwister.N, seed.length); k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = ((l0 ^ ((l1 ^ (l1 >> 30)) * 1664525L)) + (seed[j])) + j;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			j++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
			if (j >= (seed.length)) {
				j = 0;
			}
		}
		for (int k = (org.apache.commons.math.random.MersenneTwister.N) - 1; k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941L)) - i;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
		}
		mt[0] = -2147483648;
	}

	@java.lang.Override
	public void setSeed(long seed) {
		setSeed(new int[]{ ((int) (seed >>> 32)) , ((int) (seed & 4294967295L)) });
	}

	@java.lang.Override
	protected int next(int bits) {
		int y;
		if ((mti) >= (org.apache.commons.math.random.MersenneTwister.N)) {
			int mtNext = mt[0];
			for (int k = 0; k < ((org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M)); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + (org.apache.commons.math.random.MersenneTwister.M))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			for (int k = (org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M); k < ((org.apache.commons.math.random.MersenneTwister.N) - 1); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + ((org.apache.commons.math.random.MersenneTwister.M) - (org.apache.commons.math.random.MersenneTwister.N)))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			y = (mtNext & -2147483648) | ((mt[0]) & 2147483647);
			mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)] = ((mt[((org.apache.commons.math.random.MersenneTwister.M) - 1)]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			mti = 0;
		}
		y = mt[((mti)++)];
		y ^= y >>> 11;
		y ^= (y << 7) & -1658038656;
		y ^= (y << 15) & -272236544;
		y ^= y >>> 18;
		return y >>> (32 - bits);
	}
}
2019-04-16 06:02:03,803 ERROR main - Undo Error: modified: 
public class MersenneTwister extends org.apache.commons.math.random.BitsStreamGenerator implements java.io.Serializable {
	private static final long serialVersionUID = 8661194735290153518L;

	private static final int N = 624;

	private static final int M = 397;

	private static final int[] MAG01 = new int[]{ 0 , -1727483681 };

	private int[] mt;

	private int mti;

	public MersenneTwister() {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(java.lang.System.currentTimeMillis());
	}

	public MersenneTwister(int seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(int[] seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(long seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	@java.lang.Override
	public void setSeed(int seed) {
		long longMT = seed;
		mt[0] = ((int) (longMT));
		for (mti = 1; (mti) < (org.apache.commons.math.random.MersenneTwister.N); ++(mti)) {
			longMT = ((1812433253L * (longMT ^ (longMT >> 30))) + (mti)) & 4294967295L;
			mt[mti] = ((int) (longMT));
		}
	}

	@java.lang.Override
	public void setSeed(int[] seed) {
		if (seed == null) {
			setSeed(java.lang.System.currentTimeMillis());
			return ;
		}
		setSeed(19650218);
		int i = 1;
		int j = 0;
		for (int k = org.apache.commons.math.util.FastMath.max(org.apache.commons.math.random.MersenneTwister.N, seed.length); k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = ((l0 ^ ((l1 ^ (l1 >> 30)) * 1664525L)) + (seed[j])) + j;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			j++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
			if (j >= (seed.length))
				j = 0;
			
		}
		for (int k = (org.apache.commons.math.random.MersenneTwister.N) - 1; k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941L)) - i;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
		}
		mt[0] = -2147483648;
	}

	@java.lang.Override
	public void setSeed(long seed) {
		setSeed(new int[]{ ((int) (seed >>> 32)) , ((int) (seed & 4294967295L)) });
	}

	@java.lang.Override
	protected int next(int bits) {
		int y;
		if ((mti) >= (org.apache.commons.math.random.MersenneTwister.N)) {
			int mtNext = mt[0];
			for (int k = 0; k < ((org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M)); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + (org.apache.commons.math.random.MersenneTwister.M))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			for (int k = (org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M); k < ((org.apache.commons.math.random.MersenneTwister.N) - 1); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + ((org.apache.commons.math.random.MersenneTwister.M) - (org.apache.commons.math.random.MersenneTwister.N)))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			y = (mtNext & -2147483648) | ((mt[0]) & 2147483647);
			mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)] = ((mt[((org.apache.commons.math.random.MersenneTwister.M) - 1)]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			mti = 0;
		}
		y = mt[((mti)++)];
		y ^= y >>> 11;
		y ^= (y << 7) & -1658038656;
		y ^= (y << 15) & -272236544;
		y ^= y >>> 18;
		return y >>> (32 - bits);
	}
}
2019-04-16 06:02:30,955 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:02:30,956 ERROR main - Undo Error: original: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++) {
			if ((point[i]) != (otherPoint[i]))
				return false;
			
		}
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:02:30,956 ERROR main - Undo Error: modified: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++)
			if ((point[i]) != (otherPoint[i]))
				return false;
			
		
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:04:52,870 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 06:06:36,267 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:06:36,267 ERROR main - Undo Error: original: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++) {
			if ((point[i]) != (otherPoint[i])) {
				return false;
			}
		}
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:06:36,268 ERROR main - Undo Error: modified: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++) {
			if ((point[i]) != (otherPoint[i]))
				return false;
			
		}
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:10:27,812 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 06:16:37,218 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 06:16:37,307 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:16:37,307 ERROR main - Undo Error: original: 
public class KMeansPlusPlusClusterer<T extends org.apache.commons.math.stat.clustering.Clusterable<T>> {
	public static enum EmptyClusterStrategy {
LARGEST_VARIANCE, LARGEST_POINTS_NUMBER, FARTHEST_POINT, ERROR;	}

	private final java.util.Random random;

	private final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy;

	public KMeansPlusPlusClusterer(final java.util.Random random) {
		this(random, org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy.LARGEST_VARIANCE);
	}

	public KMeansPlusPlusClusterer(final java.util.Random random, final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy) {
		this.random = random;
		this.emptyStrategy = emptyStrategy;
	}

	public java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> cluster(final java.util.Collection<T> points, final int k, final int maxIterations) {
		java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> clusters = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(points, k, random);
		org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(clusters, points);
		final int max = (maxIterations < 0) ? java.lang.Integer.MAX_VALUE : maxIterations;
		for (int count = 0; count < max; count++) {
			boolean clusteringChanged = false;
			java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> newClusters = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
			for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
				final T newCenter;
				if (cluster.getPoints().isEmpty()) {
					switch (emptyStrategy) {
						case LARGEST_VARIANCE :
							newCenter = getPointFromLargestVarianceCluster(clusters);
							break;
						case LARGEST_POINTS_NUMBER :
							newCenter = getPointFromLargestNumberCluster(clusters);
							break;
						case FARTHEST_POINT :
							newCenter = getFarthestPoint(clusters);
							break;
						default :
							throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
					}
					clusteringChanged = true;
				}else {
					newCenter = cluster.getCenter().centroidOf(cluster.getPoints());
					if (!(newCenter.equals(cluster.getCenter()))) {
						clusteringChanged = true;
					}
				}
				newClusters.add(new org.apache.commons.math.stat.clustering.Cluster<T>(newCenter));
			}
			if (!clusteringChanged) {
				return clusters;
			}
			org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(newClusters, points);
			clusters = newClusters;
		}
		return clusters;
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> void assignPointsToClusters(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final java.util.Collection<T> points) {
		for (final T p : points) {
			org.apache.commons.math.stat.clustering.Cluster<T> cluster = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(clusters, p);
			cluster.addPoint(p);
		}
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> chooseInitialCenters(final java.util.Collection<T> points, final int k, final java.util.Random random) {
		final java.util.List<T> pointSet = new java.util.ArrayList<T>(points);
		final java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> resultSet = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
		final T firstPoint = pointSet.remove(random.nextInt(pointSet.size()));
		resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(firstPoint));
		final double[] dx2 = new double[pointSet.size()];
		while ((resultSet.size()) < k) {
			int sum = 0;
			for (int i = 0; i < (pointSet.size()); i++) {
				final T p = pointSet.get(i);
				final org.apache.commons.math.stat.clustering.Cluster<T> nearest = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(resultSet, p);
				final double d = p.distanceFrom(nearest.getCenter());
				sum += d * d;
				dx2[i] = sum;
			}
			final double r = (random.nextDouble()) * sum;
			for (int i = 0; i < (dx2.length); i++) {
				if ((dx2[i]) >= r) {
					final T p = pointSet.remove(i);
					resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(p));
					break;
				}
			}
		} 
		return resultSet;
	}

	private T getPointFromLargestVarianceCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxVariance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			if (!(cluster.getPoints().isEmpty())) {
				final T center = cluster.getCenter();
				final org.apache.commons.math.stat.descriptive.moment.Variance stat = new org.apache.commons.math.stat.descriptive.moment.Variance();
				for (final T point : cluster.getPoints()) {
					stat.increment(point.distanceFrom(center));
				}
				final double variance = stat.getResult();
				if (variance > maxVariance) {
					maxVariance = variance;
					selected = cluster;
				}
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getPointFromLargestNumberCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		int maxNumber = 0;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final int number = cluster.getPoints().size();
			if (number > maxNumber) {
				maxNumber = number;
				selected = cluster;
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getFarthestPoint(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxDistance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selectedCluster = null;
		int selectedPoint = -1;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final T center = cluster.getCenter();
			final java.util.List<T> points = cluster.getPoints();
			for (int i = 0; i < (points.size()); ++i) {
				final double distance = points.get(i).distanceFrom(center);
				if (distance > maxDistance) {
					maxDistance = distance;
					selectedCluster = cluster;
					selectedPoint = i;
				}
			}
		}
		if (selectedCluster == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		return selectedCluster.getPoints().remove(selectedPoint);
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> org.apache.commons.math.stat.clustering.Cluster<T> getNearestCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final T point) {
		double minDistance = java.lang.Double.MAX_VALUE;
		org.apache.commons.math.stat.clustering.Cluster<T> minCluster = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> c : clusters) {
			final double distance = point.distanceFrom(c.getCenter());
			if (distance < minDistance) {
				minDistance = distance;
				minCluster = c;
			}
		}
		return minCluster;
	}
}
2019-04-16 06:16:37,308 ERROR main - Undo Error: modified: 
public class KMeansPlusPlusClusterer<T extends org.apache.commons.math.stat.clustering.Clusterable<T>> {
	public static enum EmptyClusterStrategy {
LARGEST_VARIANCE, LARGEST_POINTS_NUMBER, FARTHEST_POINT, ERROR;	}

	private final java.util.Random random;

	private final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy;

	public KMeansPlusPlusClusterer(final java.util.Random random) {
		this(random, org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy.LARGEST_VARIANCE);
	}

	public KMeansPlusPlusClusterer(final java.util.Random random, final org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy emptyStrategy) {
		this.random = random;
		this.emptyStrategy = emptyStrategy;
	}

	public java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> cluster(final java.util.Collection<T> points, final int k, final int maxIterations) {
		java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> clusters = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(points, k, random);
		org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(clusters, points);
		final int max = (maxIterations < 0) ? java.lang.Integer.MAX_VALUE : maxIterations;
		for (int count = 0; count < max; count++) {
			boolean clusteringChanged = false;
			java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> newClusters = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
			for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
				final T newCenter;
				if (cluster.getPoints().isEmpty()) {
					switch (emptyStrategy) {
						case LARGEST_VARIANCE :
							newCenter = getPointFromLargestVarianceCluster(clusters);
							break;
						case LARGEST_POINTS_NUMBER :
							newCenter = getPointFromLargestNumberCluster(clusters);
							break;
						case FARTHEST_POINT :
							newCenter = getFarthestPoint(clusters);
							break;
						default :
							throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
					}
					clusteringChanged = true;
				}else {
					newCenter = cluster.getCenter().centroidOf(cluster.getPoints());
					if (!(newCenter.equals(cluster.getCenter()))) {
						clusteringChanged = true;
					}
				}
				newClusters.add(new org.apache.commons.math.stat.clustering.Cluster<T>(newCenter));
			}
			if (!clusteringChanged) {
				return clusters;
			}
			org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(newClusters, points);
			clusters = newClusters;
		}
		return clusters;
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> void assignPointsToClusters(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final java.util.Collection<T> points) {
		for (final T p : points) {
			org.apache.commons.math.stat.clustering.Cluster<T> cluster = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(clusters, p);
			cluster.addPoint(p);
		}
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> chooseInitialCenters(final java.util.Collection<T> points, final int k, final java.util.Random random) {
		final java.util.List<T> pointSet = new java.util.ArrayList<T>(points);
		final java.util.List<org.apache.commons.math.stat.clustering.Cluster<T>> resultSet = new java.util.ArrayList<org.apache.commons.math.stat.clustering.Cluster<T>>();
		final T firstPoint = pointSet.remove(random.nextInt(pointSet.size()));
		resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(firstPoint));
		final double[] dx2 = new double[pointSet.size()];
		while ((resultSet.size()) < k) {
			int sum = 0;
			for (int i = 0; i < (pointSet.size()); i++) {
				final T p = pointSet.get(i);
				final org.apache.commons.math.stat.clustering.Cluster<T> nearest = org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(resultSet, p);
				final double d = p.distanceFrom(nearest.getCenter());
				sum += d * d;
				dx2[i] = sum;
			}
			final double r = (random.nextDouble()) * sum;
			for (int i = 0; i < (dx2.length); i++)
				if ((dx2[i]) >= r) {
					final T p = pointSet.remove(i);
					resultSet.add(new org.apache.commons.math.stat.clustering.Cluster<T>(p));
					break;
				}
			
		} 
		return resultSet;
	}

	private T getPointFromLargestVarianceCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxVariance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			if (!(cluster.getPoints().isEmpty())) {
				final T center = cluster.getCenter();
				final org.apache.commons.math.stat.descriptive.moment.Variance stat = new org.apache.commons.math.stat.descriptive.moment.Variance();
				for (final T point : cluster.getPoints()) {
					stat.increment(point.distanceFrom(center));
				}
				final double variance = stat.getResult();
				if (variance > maxVariance) {
					maxVariance = variance;
					selected = cluster;
				}
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getPointFromLargestNumberCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		int maxNumber = 0;
		org.apache.commons.math.stat.clustering.Cluster<T> selected = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final int number = cluster.getPoints().size();
			if (number > maxNumber) {
				maxNumber = number;
				selected = cluster;
			}
		}
		if (selected == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		final java.util.List<T> selectedPoints = selected.getPoints();
		return selectedPoints.remove(random.nextInt(selectedPoints.size()));
	}

	private T getFarthestPoint(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters) {
		double maxDistance = java.lang.Double.NEGATIVE_INFINITY;
		org.apache.commons.math.stat.clustering.Cluster<T> selectedCluster = null;
		int selectedPoint = -1;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> cluster : clusters) {
			final T center = cluster.getCenter();
			final java.util.List<T> points = cluster.getPoints();
			for (int i = 0; i < (points.size()); ++i) {
				final double distance = points.get(i).distanceFrom(center);
				if (distance > maxDistance) {
					maxDistance = distance;
					selectedCluster = cluster;
					selectedPoint = i;
				}
			}
		}
		if (selectedCluster == null) {
			throw new org.apache.commons.math.exception.ConvergenceException(org.apache.commons.math.exception.util.LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
		}
		return selectedCluster.getPoints().remove(selectedPoint);
	}

	private static <T extends org.apache.commons.math.stat.clustering.Clusterable<T>> org.apache.commons.math.stat.clustering.Cluster<T> getNearestCluster(final java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>> clusters, final T point) {
		double minDistance = java.lang.Double.MAX_VALUE;
		org.apache.commons.math.stat.clustering.Cluster<T> minCluster = null;
		for (final org.apache.commons.math.stat.clustering.Cluster<T> c : clusters) {
			final double distance = point.distanceFrom(c.getCenter());
			if (distance < minDistance) {
				minDistance = distance;
				minCluster = c;
			}
		}
		return minCluster;
	}
}
2019-04-16 06:16:40,954 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:16:40,954 ERROR main - Undo Error: original: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9')) {
				leading = false;
			}
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading)) {
				sig++;
			}
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp)) {
				buf[i] = '0';
			}
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:16:40,957 ERROR main - Undo Error: modified: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9')) {
				leading = false;
			}
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading))
				sig++;
			
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp)) {
				buf[i] = '0';
			}
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:19:39,839 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 06:29:32,696 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:29:32,696 ERROR main - Undo Error: original: 
public class MersenneTwister extends org.apache.commons.math.random.BitsStreamGenerator implements java.io.Serializable {
	private static final long serialVersionUID = 8661194735290153518L;

	private static final int N = 624;

	private static final int M = 397;

	private static final int[] MAG01 = new int[]{ 0 , -1727483681 };

	private int[] mt;

	private int mti;

	public MersenneTwister() {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(java.lang.System.currentTimeMillis());
	}

	public MersenneTwister(int seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(int[] seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(long seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	@java.lang.Override
	public void setSeed(int seed) {
		long longMT = seed;
		mt[0] = ((int) (longMT));
		for (mti = 1; (mti) < (org.apache.commons.math.random.MersenneTwister.N); ++(mti)) {
			longMT = ((1812433253L * (longMT ^ (longMT >> 30))) + (mti)) & 4294967295L;
			mt[mti] = ((int) (longMT));
		}
	}

	@java.lang.Override
	public void setSeed(int[] seed) {
		if (seed == null) {
			setSeed(java.lang.System.currentTimeMillis());
			return ;
		}
		setSeed(19650218);
		int i = 1;
		int j = 0;
		for (int k = org.apache.commons.math.util.FastMath.max(org.apache.commons.math.random.MersenneTwister.N, seed.length); k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = ((l0 ^ ((l1 ^ (l1 >> 30)) * 1664525L)) + (seed[j])) + j;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			j++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
			if (j >= (seed.length)) {
				j = 0;
			}
		}
		for (int k = (org.apache.commons.math.random.MersenneTwister.N) - 1; k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941L)) - i;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
		}
		mt[0] = -2147483648;
	}

	@java.lang.Override
	public void setSeed(long seed) {
		setSeed(new int[]{ ((int) (seed >>> 32)) , ((int) (seed & 4294967295L)) });
	}

	@java.lang.Override
	protected int next(int bits) {
		int y;
		if ((mti) >= (org.apache.commons.math.random.MersenneTwister.N)) {
			int mtNext = mt[0];
			for (int k = 0; k < ((org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M)); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + (org.apache.commons.math.random.MersenneTwister.M))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			for (int k = (org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M); k < ((org.apache.commons.math.random.MersenneTwister.N) - 1); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + ((org.apache.commons.math.random.MersenneTwister.M) - (org.apache.commons.math.random.MersenneTwister.N)))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			y = (mtNext & -2147483648) | ((mt[0]) & 2147483647);
			mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)] = ((mt[((org.apache.commons.math.random.MersenneTwister.M) - 1)]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			mti = 0;
		}
		y = mt[((mti)++)];
		y ^= y >>> 11;
		y ^= (y << 7) & -1658038656;
		y ^= (y << 15) & -272236544;
		y ^= y >>> 18;
		return y >>> (32 - bits);
	}
}
2019-04-16 06:29:32,697 ERROR main - Undo Error: modified: 
public class MersenneTwister extends org.apache.commons.math.random.BitsStreamGenerator implements java.io.Serializable {
	private static final long serialVersionUID = 8661194735290153518L;

	private static final int N = 624;

	private static final int M = 397;

	private static final int[] MAG01 = new int[]{ 0 , -1727483681 };

	private int[] mt;

	private int mti;

	public MersenneTwister() {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(java.lang.System.currentTimeMillis());
	}

	public MersenneTwister(int seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(int[] seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	public MersenneTwister(long seed) {
		mt = new int[org.apache.commons.math.random.MersenneTwister.N];
		setSeed(seed);
	}

	@java.lang.Override
	public void setSeed(int seed) {
		long longMT = seed;
		mt[0] = ((int) (longMT));
		for (mti = 1; (mti) < (org.apache.commons.math.random.MersenneTwister.N); ++(mti)) {
			longMT = ((1812433253L * (longMT ^ (longMT >> 30))) + (mti)) & 4294967295L;
			mt[mti] = ((int) (longMT));
		}
	}

	@java.lang.Override
	public void setSeed(int[] seed) {
		if (seed == null) {
			setSeed(java.lang.System.currentTimeMillis());
			return ;
		}
		setSeed(19650218);
		int i = 1;
		int j = 0;
		for (int k = org.apache.commons.math.util.FastMath.max(org.apache.commons.math.random.MersenneTwister.N, seed.length); k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = ((l0 ^ ((l1 ^ (l1 >> 30)) * 1664525L)) + (seed[j])) + j;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			j++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
			if (j >= (seed.length))
				j = 0;
			
		}
		for (int k = (org.apache.commons.math.random.MersenneTwister.N) - 1; k != 0; k--) {
			long l0 = ((mt[i]) & 2147483647L) | ((mt[i]) < 0 ? 2147483648L : 0L);
			long l1 = ((mt[(i - 1)]) & 2147483647L) | ((mt[(i - 1)]) < 0 ? 2147483648L : 0L);
			long l = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941L)) - i;
			mt[i] = ((int) (l & 4294967295L));
			i++;
			if (i >= (org.apache.commons.math.random.MersenneTwister.N)) {
				mt[0] = mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)];
				i = 1;
			}
		}
		mt[0] = -2147483648;
	}

	@java.lang.Override
	public void setSeed(long seed) {
		setSeed(new int[]{ ((int) (seed >>> 32)) , ((int) (seed & 4294967295L)) });
	}

	@java.lang.Override
	protected int next(int bits) {
		int y;
		if ((mti) >= (org.apache.commons.math.random.MersenneTwister.N)) {
			int mtNext = mt[0];
			for (int k = 0; k < ((org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M)); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + (org.apache.commons.math.random.MersenneTwister.M))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			for (int k = (org.apache.commons.math.random.MersenneTwister.N) - (org.apache.commons.math.random.MersenneTwister.M); k < ((org.apache.commons.math.random.MersenneTwister.N) - 1); ++k) {
				int mtCurr = mtNext;
				mtNext = mt[(k + 1)];
				y = (mtCurr & -2147483648) | (mtNext & 2147483647);
				mt[k] = ((mt[(k + ((org.apache.commons.math.random.MersenneTwister.M) - (org.apache.commons.math.random.MersenneTwister.N)))]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			}
			y = (mtNext & -2147483648) | ((mt[0]) & 2147483647);
			mt[((org.apache.commons.math.random.MersenneTwister.N) - 1)] = ((mt[((org.apache.commons.math.random.MersenneTwister.M) - 1)]) ^ (y >>> 1)) ^ (org.apache.commons.math.random.MersenneTwister.MAG01[(y & 1)]);
			mti = 0;
		}
		y = mt[((mti)++)];
		y ^= y >>> 11;
		y ^= (y << 7) & -1658038656;
		y ^= (y << 15) & -272236544;
		y ^= y >>> 18;
		return y >>> (32 - bits);
	}
}
2019-04-16 06:39:00,408 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:39:00,408 ERROR main - Undo Error: original: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9')) {
				leading = false;
			}
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading))
				sig++;
			
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp)) {
				buf[i] = '0';
			}
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:39:00,411 ERROR main - Undo Error: modified: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9'))
				leading = false;
			
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading))
				sig++;
			
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp)) {
				buf[i] = '0';
			}
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:42:08,815 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 06:51:44,147 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 06:51:47,552 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:51:47,552 ERROR main - Undo Error: original: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9'))
				leading = false;
			
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading)) {
				sig++;
			}
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp)) {
				buf[i] = '0';
			}
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:51:47,555 ERROR main - Undo Error: modified: 
public class DfpField implements org.apache.commons.math.Field<org.apache.commons.math.dfp.Dfp> {
	public enum RoundingMode {
ROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;	}

	public static final int FLAG_INVALID = 1;

	public static final int FLAG_DIV_ZERO = 2;

	public static final int FLAG_OVERFLOW = 4;

	public static final int FLAG_UNDERFLOW = 8;

	public static final int FLAG_INEXACT = 16;

	private static java.lang.String sqr2String;

	private static java.lang.String sqr2ReciprocalString;

	private static java.lang.String sqr3String;

	private static java.lang.String sqr3ReciprocalString;

	private static java.lang.String piString;

	private static java.lang.String eString;

	private static java.lang.String ln2String;

	private static java.lang.String ln5String;

	private static java.lang.String ln10String;

	private final int radixDigits;

	private final org.apache.commons.math.dfp.Dfp zero;

	private final org.apache.commons.math.dfp.Dfp one;

	private final org.apache.commons.math.dfp.Dfp two;

	private final org.apache.commons.math.dfp.Dfp sqr2;

	private final org.apache.commons.math.dfp.Dfp[] sqr2Split;

	private final org.apache.commons.math.dfp.Dfp sqr2Reciprocal;

	private final org.apache.commons.math.dfp.Dfp sqr3;

	private final org.apache.commons.math.dfp.Dfp sqr3Reciprocal;

	private final org.apache.commons.math.dfp.Dfp pi;

	private final org.apache.commons.math.dfp.Dfp[] piSplit;

	private final org.apache.commons.math.dfp.Dfp e;

	private final org.apache.commons.math.dfp.Dfp[] eSplit;

	private final org.apache.commons.math.dfp.Dfp ln2;

	private final org.apache.commons.math.dfp.Dfp[] ln2Split;

	private final org.apache.commons.math.dfp.Dfp ln5;

	private final org.apache.commons.math.dfp.Dfp[] ln5Split;

	private final org.apache.commons.math.dfp.Dfp ln10;

	private org.apache.commons.math.dfp.DfpField.RoundingMode rMode;

	private int ieeeFlags;

	public DfpField(final int decimalDigits) {
		this(decimalDigits, true);
	}

	private DfpField(final int decimalDigits, final boolean computeConstants) {
		this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
		this.rMode = org.apache.commons.math.dfp.DfpField.RoundingMode.ROUND_HALF_EVEN;
		this.ieeeFlags = 0;
		this.zero = new org.apache.commons.math.dfp.Dfp(this, 0);
		this.one = new org.apache.commons.math.dfp.Dfp(this, 1);
		this.two = new org.apache.commons.math.dfp.Dfp(this, 2);
		if (computeConstants) {
			synchronized(org.apache.commons.math.dfp.DfpField.class) {
				org.apache.commons.math.dfp.DfpField.computeStringConstants((decimalDigits < 67 ? 200 : 3 * decimalDigits));
				sqr2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Split = split(org.apache.commons.math.dfp.DfpField.sqr2String);
				sqr2Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
				sqr3 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3String);
				sqr3Reciprocal = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
				pi = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.piString);
				piSplit = split(org.apache.commons.math.dfp.DfpField.piString);
				e = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.eString);
				eSplit = split(org.apache.commons.math.dfp.DfpField.eString);
				ln2 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln2String);
				ln2Split = split(org.apache.commons.math.dfp.DfpField.ln2String);
				ln5 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln5String);
				ln5Split = split(org.apache.commons.math.dfp.DfpField.ln5String);
				ln10 = new org.apache.commons.math.dfp.Dfp(this, org.apache.commons.math.dfp.DfpField.ln10String);
			}
		}else {
			sqr2 = null;
			sqr2Split = null;
			sqr2Reciprocal = null;
			sqr3 = null;
			sqr3Reciprocal = null;
			pi = null;
			piSplit = null;
			e = null;
			eSplit = null;
			ln2 = null;
			ln2Split = null;
			ln5 = null;
			ln5Split = null;
			ln10 = null;
		}
	}

	public int getRadixDigits() {
		return radixDigits;
	}

	public void setRoundingMode(final org.apache.commons.math.dfp.DfpField.RoundingMode mode) {
		rMode = mode;
	}

	public org.apache.commons.math.dfp.DfpField.RoundingMode getRoundingMode() {
		return rMode;
	}

	public int getIEEEFlags() {
		return ieeeFlags;
	}

	public void clearIEEEFlags() {
		ieeeFlags = 0;
	}

	public void setIEEEFlags(final int flags) {
		ieeeFlags = flags & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public void setIEEEFlagsBits(final int bits) {
		ieeeFlags |= bits & (((((org.apache.commons.math.dfp.DfpField.FLAG_INVALID) | (org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO)) | (org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW)) | (org.apache.commons.math.dfp.DfpField.FLAG_INEXACT));
	}

	public org.apache.commons.math.dfp.Dfp newDfp() {
		return new org.apache.commons.math.dfp.Dfp(this);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final int x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final long x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final double x) {
		return new org.apache.commons.math.dfp.Dfp(this, x);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(org.apache.commons.math.dfp.Dfp d) {
		return new org.apache.commons.math.dfp.Dfp(d);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final java.lang.String s) {
		return new org.apache.commons.math.dfp.Dfp(this, s);
	}

	public org.apache.commons.math.dfp.Dfp newDfp(final byte sign, final byte nans) {
		return new org.apache.commons.math.dfp.Dfp(this, sign, nans);
	}

	public org.apache.commons.math.dfp.Dfp getZero() {
		return zero;
	}

	public org.apache.commons.math.dfp.Dfp getOne() {
		return one;
	}

	public org.apache.commons.math.dfp.Dfp getTwo() {
		return two;
	}

	public org.apache.commons.math.dfp.Dfp getSqr2() {
		return sqr2;
	}

	public org.apache.commons.math.dfp.Dfp[] getSqr2Split() {
		return sqr2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getSqr2Reciprocal() {
		return sqr2Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3() {
		return sqr3;
	}

	public org.apache.commons.math.dfp.Dfp getSqr3Reciprocal() {
		return sqr3Reciprocal;
	}

	public org.apache.commons.math.dfp.Dfp getPi() {
		return pi;
	}

	public org.apache.commons.math.dfp.Dfp[] getPiSplit() {
		return piSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getE() {
		return e;
	}

	public org.apache.commons.math.dfp.Dfp[] getESplit() {
		return eSplit.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn2() {
		return ln2;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn2Split() {
		return ln2Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn5() {
		return ln5;
	}

	public org.apache.commons.math.dfp.Dfp[] getLn5Split() {
		return ln5Split.clone();
	}

	public org.apache.commons.math.dfp.Dfp getLn10() {
		return ln10;
	}

	private org.apache.commons.math.dfp.Dfp[] split(final java.lang.String a) {
		org.apache.commons.math.dfp.Dfp[] result = new org.apache.commons.math.dfp.Dfp[2];
		boolean leading = true;
		int sp = 0;
		int sig = 0;
		char[] buf = new char[a.length()];
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if (((buf[i]) >= '1') && ((buf[i]) <= '9'))
				leading = false;
			
			if ((buf[i]) == '.') {
				sig += (400 - sig) % 4;
				leading = false;
			}
			if (sig == (((radixDigits) / 2) * 4)) {
				sp = i;
				break;
			}
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (!leading)) {
				sig++;
			}
		}
		result[0] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf, 0, sp));
		for (int i = 0; i < (buf.length); i++) {
			buf[i] = a.charAt(i);
			if ((((buf[i]) >= '0') && ((buf[i]) <= '9')) && (i < sp))
				buf[i] = '0';
			
		}
		result[1] = new org.apache.commons.math.dfp.Dfp(this, new java.lang.String(buf));
		return result;
	}

	private static void computeStringConstants(final int highPrecisionDecimalDigits) {
		if (((org.apache.commons.math.dfp.DfpField.sqr2String) == null) || ((org.apache.commons.math.dfp.DfpField.sqr2String.length()) < (highPrecisionDecimalDigits - 3))) {
			final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits, false);
			final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 1);
			final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 2);
			final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField, 3);
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
			org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
			final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
			org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
			org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
			org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
			org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
			org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo).toString();
			org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();
		}
	}

	private static org.apache.commons.math.dfp.Dfp computePi(final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two, final org.apache.commons.math.dfp.Dfp three) {
		org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
		org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
		org.apache.commons.math.dfp.Dfp four = two.add(two);
		org.apache.commons.math.dfp.Dfp two2kp3 = two;
		org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
		for (int i = 1; i < 20; i++) {
			final org.apache.commons.math.dfp.Dfp ykM1 = yk;
			final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
			final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
			final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
			yk = one.subtract(s).divide(one.add(s));
			two2kp3 = two2kp3.multiply(four);
			final org.apache.commons.math.dfp.Dfp p = one.add(yk);
			final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
			ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
			if (yk.equals(ykM1)) {
				break;
			}
		}
		return one.divide(ak);
	}

	public static org.apache.commons.math.dfp.Dfp computeExp(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one) {
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
		org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
		for (int i = 0; i < 10000; i++) {
			x = x.multiply(a);
			y = y.add(x.divide(f));
			fi = fi.add(one);
			f = f.multiply(fi);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y;
	}

	public static org.apache.commons.math.dfp.Dfp computeLn(final org.apache.commons.math.dfp.Dfp a, final org.apache.commons.math.dfp.Dfp one, final org.apache.commons.math.dfp.Dfp two) {
		int den = 1;
		org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField(), (-1))).divide(a.add(one));
		org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
		org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
		for (int i = 0; i < 10000; i++) {
			num = num.multiply(x);
			num = num.multiply(x);
			den = den + 2;
			org.apache.commons.math.dfp.Dfp t = num.divide(den);
			y = y.add(t);
			if (y.equals(py)) {
				break;
			}
			py = new org.apache.commons.math.dfp.Dfp(y);
		}
		return y.multiply(two);
	}
}
2019-04-16 06:53:24,054 ERROR main - Error: the model was not the same from the original after this generation
2019-04-16 06:53:24,054 ERROR main - Undo Error: original: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++) {
			if ((point[i]) != (otherPoint[i]))
				return false;
			
		}
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:53:24,055 ERROR main - Undo Error: modified: 
public class EuclideanIntegerPoint implements java.io.Serializable , org.apache.commons.math.stat.clustering.Clusterable<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> {
	private static final long serialVersionUID = 3946024775784901369L;

	private final int[] point;

	public EuclideanIntegerPoint(final int[] point) {
		this.point = point;
	}

	public int[] getPoint() {
		return point;
	}

	public double distanceFrom(final org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p) {
		return org.apache.commons.math.util.MathUtils.distance(point, p.getPoint());
	}

	public org.apache.commons.math.stat.clustering.EuclideanIntegerPoint centroidOf(final java.util.Collection<org.apache.commons.math.stat.clustering.EuclideanIntegerPoint> points) {
		int[] centroid = new int[getPoint().length];
		for (org.apache.commons.math.stat.clustering.EuclideanIntegerPoint p : points) {
			for (int i = 0; i < (centroid.length); i++) {
				centroid[i] += p.getPoint()[i];
			}
		}
		for (int i = 0; i < (centroid.length); i++) {
			centroid[i] /= points.size();
		}
		return new org.apache.commons.math.stat.clustering.EuclideanIntegerPoint(centroid);
	}

	@java.lang.Override
	public boolean equals(final java.lang.Object other) {
		if (!(other instanceof org.apache.commons.math.stat.clustering.EuclideanIntegerPoint)) {
			return false;
		}
		final int[] otherPoint = ((org.apache.commons.math.stat.clustering.EuclideanIntegerPoint) (other)).getPoint();
		if ((point.length) != (otherPoint.length)) {
			return false;
		}
		for (int i = 0; i < (point.length); i++)
			if ((point[i]) != (otherPoint[i]))
				return false;
			
		
		return true;
	}

	@java.lang.Override
	public int hashCode() {
		int hashCode = 0;
		for (java.lang.Integer i : point) {
			hashCode += ((i.hashCode()) * 13) + 7;
		}
		return hashCode;
	}

	@java.lang.Override
	public java.lang.String toString() {
		final java.lang.StringBuilder buff = new java.lang.StringBuilder("(");
		final int[] coordinates = getPoint();
		for (int i = 0; i < (coordinates.length); i++) {
			buff.append(coordinates[i]);
			if (i < ((coordinates.length) - 1)) {
				buff.append(",");
			}
		}
		buff.append(")");
		return buff.toString();
	}
}
2019-04-16 06:56:22,317 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 06:58:23,628 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 07:13:04,301 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 07:15:07,563 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 07:22:33,421 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-16 07:23:55,982 INFO main - Time Repair Loop (s): 5199.937
2019-04-16 07:23:55,982 INFO main - 
----SUMMARY_EXECUTION---
2019-04-16 07:23:55,982 INFO main - 
successful_ing_attempts (0): []
2019-04-16 07:23:55,982 INFO main - 
failing_ing_attempts (600): [0, 0, 4, 16, 6, 1, 2, 23, 1, 4, 0, 2, 0, 2, 0, 0, 3, 2, 1, 5, 2, 6, 25, 0, 1, 1, 1, 0, 3, 3, 4, 4, 0, 0, 13, 12, 2, 2, 0, 1, 7, 1, 22, 1, 16, 0, 4, 0, 7, 0, 9, 1, 3, 0, 0, 10, 3, 1, 1, 6, 0, 0, 1, 0, 0, 7, 12, 7, 2, 19, 1, 4, 5, 0, 5, 0, 6, 0, 5, 0, 0, 16, 0, 0, 3, 0, 3, 1, 3, 1, 1, 0, 3, 3, 12, 6, 0, 19, 2, 0, 3, 7, 1, 1, 2, 18, 1, 1, 9, 39, 12, 4, 4, 0, 0, 7, 4, 0, 9, 0, 0, 3, 1, 2, 7, 2, 0, 7, 23, 9, 2, 2, 1, 0, 0, 15, 2, 3, 1, 5, 11, 0, 6, 9, 6, 8, 3, 4, 1, 5, 4, 1, 0, 1, 6, 0, 4, 2, 18, 8, 1, 2, 18, 16, 0, 2, 4, 1, 2, 5, 0, 1, 0, 0, 2, 0, 9, 4, 9, 8, 2, 0, 0, 6, 0, 6, 0, 0, 0, 1, 1, 2, 0, 11, 5, 3, 0, 0, 2, 0, 6, 2, 11, 5, 0, 1, 4, 9, 1, 12, 0, 8, 4, 0, 4, 5, 1, 3, 3, 4, 1, 3, 0, 7, 6, 1, 5, 11, 0, 0, 20, 16, 0, 0, 3, 0, 2, 10, 0, 4, 1, 6, 1, 0, 17, 1, 0, 0, 1, 0, 0, 2, 9, 5, 3, 0, 0, 0, 3, 3, 0, 2, 2, 0, 13, 4, 3, 2, 5, 9, 4, 0, 0, 24, 0, 1, 1, 2, 4, 12, 2, 1, 1, 1, 12, 5, 4, 11, 3, 2, 3, 2, 0, 0, 1, 5, 0, 3, 1, 8, 2, 5, 6, 13, 1, 7, 0, 2, 2, 6, 0, 3, 8, 0, 8, 7, 12, 2, 0, 0, 3, 1, 2, 1, 4, 0, 5, 5, 10, 0, 2, 7, 2, 0, 26, 2, 8, 6, 0, 0, 4, 2, 3, 0, 1, 6, 1, 4, 1, 8, 2, 0, 2, 4, 7, 1, 0, 1, 11, 2, 2, 1, 1, 1, 1, 3, 4, 7, 0, 1, 1, 0, 15, 0, 7, 4, 3, 0, 3, 1, 1, 0, 0, 5, 21, 1, 1, 7, 0, 1, 0, 4, 8, 1, 4, 6, 2, 4, 1, 18, 4, 3, 1, 2, 7, 9, 3, 1, 0, 0, 3, 2, 0, 0, 0, 1, 3, 3, 0, 18, 2, 11, 2, 1, 0, 5, 0, 2, 3, 0, 3, 0, 0, 1, 3, 8, 2, 9, 3, 13, 0, 12, 0, 16, 2, 19, 10, 0, 4, 1, 4, 2, 3, 4, 54, 3, 3, 0, 1, 5, 0, 3, 16, 1, 3, 10, 4, 0, 0, 2, 5, 0, 4, 2, 5, 2, 4, 0, 20, 4, 6, 0, 7, 1, 0, 1, 1, 4, 15, 2, 5, 0, 1, 1, 0, 7, 1, 6, 2, 1, 3, 7, 2, 5, 0, 1, 2, 0, 3, 23, 0, 1, 7, 6, 3, 0, 0, 0, 2, 1, 9, 32, 0, 1, 4, 0, 2, 0, 2, 6, 3, 0, 1, 1, 1, 6, 0, 1, 2, 3, 6, 0, 5, 1, 3, 1, 2, 1, 1, 3, 2, 3, 6, 1, 12, 0, 5, 2, 2, 29, 8, 8, 1, 2, 1, 57, 3, 0, 1, 7, 1, 0, 5, 5, 1, 0, 2, 42, 1, 3, 13, 7, 1, 1, 4, 0, 9, 0, 2, 0, 2, 6, 0, 0, 2, 3, 10, 7, 6, 3]
2019-04-16 07:23:55,982 INFO fr.inria.main.evolution.AstorMain - Time Total(s): 5468.714
[DONE]
