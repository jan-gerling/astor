2019-04-12 08:30:39,034 INFO main - command line arguments: [-jvm4testexecution  /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin  -mode  jgenprog  -scope  package  -srcjavafolder  /src/java/  -srctestfolder  /src/test/  -binjavafolder  /target/classes/  -bintestfolder  /target/test-classes/  -location  defect4j_tests/math_84/  -dependencies  ./examples/libs/junit-4.4.jar  -flthreshold  0.5  -maxtime  100  -stopfirst  true]
2019-04-12 08:30:42,804 INFO main - -Executing Gzoltar classpath: /home/jan_gerling/astor/./outputMutation/AstorMain-math_84//bin//default from 224 classes with test cases
2019-04-12 08:30:42,804 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Gzoltar fault localization: min susp value parameter: 0.5
2019-04-12 08:30:45,721 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - -gz-Adding classpath: [/home/jan_gerling/astor/./examples/libs/junit-4.4.jar, /home/jan_gerling/astor/./outputMutation/AstorMain-math_84//bin//default]
2019-04-12 08:31:19,346 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Test failt: org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMinimizeMaximize
2019-04-12 08:31:19,346 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Test failt: org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMath283
2019-04-12 08:31:19,359 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Gzoltar Test Result Total:2054, fails: 2, GZoltar suspicious 16947
2019-04-12 08:31:19,407 INFO fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization - Gzoltar found: 20 with susp > 0.5, we consider: 20
2019-04-12 08:31:19,475 INFO main - building model: /home/jan_gerling/astor/./outputMutation/AstorMain-math_84//src//default, compliance level: 8
2019-04-12 08:31:44,630 INFO main - 
---- Initial suspicious size: 20
2019-04-12 08:31:44,769 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectional, methodName=org.apache.commons.math.optimization.direct.MultiDirectional{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=97, susp=0.7071067811865475]
2019-04-12 08:31:44,908 INFO main - Total suspicious from FL: 20,  19
2019-04-12 08:31:44,909 INFO main - Total ModPoint created: 19
2019-04-12 08:31:44,909 INFO main - Creating program variant #1, [Variant id: 1, #gens: 19, #ops: 0, parent:-]
2019-04-12 08:31:44,994 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectional, methodName=org.apache.commons.math.optimization.direct.MultiDirectional{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=97, susp=0.7071067811865475]
2019-04-12 08:31:45,091 INFO main - Total suspicious from FL: 20,  19
2019-04-12 08:31:45,091 INFO main - Total ModPoint created: 19
2019-04-12 08:31:45,092 INFO main - Creating program variant #2, [Variant id: 2, #gens: 19, #ops: 0, parent:-]
2019-04-12 08:31:45,143 INFO main - -any mod point created for suspicious Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectional, methodName=org.apache.commons.math.optimization.direct.MultiDirectional{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=97, susp=0.7071067811865475]
2019-04-12 08:31:45,213 INFO main - Total suspicious from FL: 20,  19
2019-04-12 08:31:45,213 INFO main - Total ModPoint created: 19
2019-04-12 08:31:45,213 INFO main - Creating program variant #3, [Variant id: 3, #gens: 19, #ops: 0, parent:-]
2019-04-12 08:32:07,279 INFO fr.inria.astor.core.setup.ConfigurationProperties - ----------------------------
2019-04-12 08:32:07,279 INFO fr.inria.astor.core.setup.ConfigurationProperties - ---Configuration properties:---Execution values
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:faultlocalization= fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:packageToInstrument= 
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:flthreshold= 0.5
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:numberExecutions= 1
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evosuiteresultfolder= evosuite
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:ignoredTestCases= 
2019-04-12 08:32:07,280 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:skipfaultlocalization= false
2019-04-12 08:32:07,288 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:maxGeneration= 200
2019-04-12 08:32:07,288 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:maxsuspcandidates= 1000
2019-04-12 08:32:07,288 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:tmax2= 960000
2019-04-12 08:32:07,288 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:tmax1= 120000
2019-04-12 08:32:07,288 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:workingDirectory= /home/jan_gerling/astor/./outputMutation
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:mode= jgenprog
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:ignoreflakyinfl= false
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:uniqueoptogen= false
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:pathToMVNRepository= 
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:timezone= America/Los_Angeles
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:applyCrossover= false
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:clonegranularity= types
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:modificationpointnavigation= weight
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:clusteringfilename= clustering.csv
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:maxtime= 100
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:probagenmutation= false
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:alternativecompliancelevel= 4
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:version-location= ./math-version/
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:location= defect4j_tests/math_84/
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:filterfaultlocalization= true
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:stopfirst= true
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:jvm4testexecution= /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:bugId= 280
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:mutationrate= 1 
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:forceExecuteRegression= false
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:projectIdentifier= 
2019-04-12 08:32:07,289 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evo_buggy_class= true
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evoRunOnBuggyClass= true
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:resetoperations= false
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:seed= 0
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:testbystep= false
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:srctestfolder= /src/test/
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:javacompliancelevel= 8
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:bintestfolder= /target/test-classes/
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:fitnessfunction= fr.inria.astor.core.loop.population.TestCaseFitnessFunction
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:commandTrunk= 50000
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:dependenciespath= ./examples/libs/junit-4.4.jar
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:multipointmodification= false
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:transformingredient= false
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:validation= process
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:scope= package
2019-04-12 08:32:07,290 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evosuitetimeout= 120
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evoDSE= false
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:elementsToMutate= 10
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:allpoints= false
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:resourcesfolder= /src/main/resources:/src/test/resources:
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:regressionforfaultlocalization= true
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:population= 3
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:saveall= false
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:pvariantfoldername= variant-
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:populationcontroller= fr.inria.astor.core.loop.population.TestCaseBasedFitnessPopulationController
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:savesolution= true
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:srcjavafolder= /src/java/
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evo_affected_by_op= true
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:binjavafolder= /target/classes/
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:reintroduce= original-parents
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - p:learningdir= 
2019-04-12 08:32:07,291 INFO fr.inria.astor.core.setup.ConfigurationProperties - ----------------------------
2019-04-12 08:32:07,291 INFO main - 
----Starting Solution Search
2019-04-12 08:32:26,594 ERROR main - Error: the model was not the same from the original after this generation
2019-04-12 08:32:26,595 ERROR main - Undo Error: original: 
public class MultiDirectional extends org.apache.commons.math.optimization.direct.DirectSearchOptimizer {
	private final double khi;

	private final double gamma;

	public MultiDirectional() {
		this.khi = 2.0;
		this.gamma = 0.5;
	}

	public MultiDirectional(final double khi, final double gamma) {
		this.khi = khi;
		this.gamma = gamma;
	}

	@java.lang.Override
	protected void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws java.lang.IllegalArgumentException, org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		while (true) {
			incrementIterationsCounter();
			final org.apache.commons.math.optimization.RealPointValuePair[] original = simplex;
			final org.apache.commons.math.optimization.RealPointValuePair best = original[0];
			final org.apache.commons.math.optimization.RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
			if ((comparator.compare(reflected, best)) < 0) {
				final org.apache.commons.math.optimization.RealPointValuePair[] reflectedSimplex = simplex;
				final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
				if ((comparator.compare(reflected, expanded)) <= 0) {
					simplex = reflectedSimplex;
				}
				return ;
			}
			final org.apache.commons.math.optimization.RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
			if ((comparator.compare(contracted, best)) < 0) {
				return ;
			}
		} 
	}

	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		final double[] xSmallest = original[0].getPointRef();
		final int n = xSmallest.length;
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		simplex[0] = original[0];
		for (int i = 1; i <= n; ++i) {
			final double[] xOriginal = original[i].getPointRef();
			final double[] xTransformed = new double[n];
			for (int j = 0; j < n; ++j) {
				xTransformed[j] = (xSmallest[j]) + (coeff * ((xSmallest[j]) - (xOriginal[j])));
			}
			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);
		}
		evaluateSimplex(comparator);
		return simplex[0];
	}
}
2019-04-12 08:32:26,595 ERROR main - Undo Error: modified: 
public class MultiDirectional extends org.apache.commons.math.optimization.direct.DirectSearchOptimizer {
	private final double khi;

	private final double gamma;

	public MultiDirectional() {
		this.khi = 2.0;
		this.gamma = 0.5;
	}

	public MultiDirectional(final double khi, final double gamma) {
		this.khi = khi;
		this.gamma = gamma;
	}

	@java.lang.Override
	protected void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws java.lang.IllegalArgumentException, org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		while (true) {
			incrementIterationsCounter();
			final org.apache.commons.math.optimization.RealPointValuePair[] original = simplex;
			final org.apache.commons.math.optimization.RealPointValuePair best = original[0];
			final org.apache.commons.math.optimization.RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
			if ((comparator.compare(reflected, best)) < 0) {
				final org.apache.commons.math.optimization.RealPointValuePair[] reflectedSimplex = simplex;
				final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
				if ((comparator.compare(reflected, expanded)) <= 0) {
					simplex = reflectedSimplex;
				}
				return ;
			}
			final org.apache.commons.math.optimization.RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
			if ((comparator.compare(contracted, best)) < 0) {
				return ;
			}
		} 
	}

	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		final double[] xSmallest = original[0].getPointRef();
		final int n = xSmallest.length;
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		simplex[0] = original[0];
		for (int i = 1; i <= n; ++i) {
			final double[] xOriginal = original[i].getPointRef();
			final double[] xTransformed = new double[n];
			for (int j = 0; j < n; ++j)
				xTransformed[j] = (xSmallest[j]) + (coeff * ((xSmallest[j]) - (xOriginal[j])));
			
			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);
		}
		evaluateSimplex(comparator);
		return simplex[0];
	}
}
2019-04-12 08:34:33,017 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:36:36,301 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:36:44,492 ERROR main - Error: the model was not the same from the original after this generation
2019-04-12 08:36:44,493 ERROR main - Undo Error: original: 
public class MultiDirectional extends org.apache.commons.math.optimization.direct.DirectSearchOptimizer {
	private final double khi;

	private final double gamma;

	public MultiDirectional() {
		this.khi = 2.0;
		this.gamma = 0.5;
	}

	public MultiDirectional(final double khi, final double gamma) {
		this.khi = khi;
		this.gamma = gamma;
	}

	@java.lang.Override
	protected void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws java.lang.IllegalArgumentException, org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		while (true) {
			incrementIterationsCounter();
			final org.apache.commons.math.optimization.RealPointValuePair[] original = simplex;
			final org.apache.commons.math.optimization.RealPointValuePair best = original[0];
			final org.apache.commons.math.optimization.RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
			if ((comparator.compare(reflected, best)) < 0) {
				final org.apache.commons.math.optimization.RealPointValuePair[] reflectedSimplex = simplex;
				final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
				if ((comparator.compare(reflected, expanded)) <= 0) {
					simplex = reflectedSimplex;
				}
				return ;
			}
			final org.apache.commons.math.optimization.RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
			if ((comparator.compare(contracted, best)) < 0) {
				return ;
			}
		} 
	}

	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		final double[] xSmallest = original[0].getPointRef();
		final int n = xSmallest.length;
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		simplex[0] = original[0];
		for (int i = 1; i <= n; ++i) {
			final double[] xOriginal = original[i].getPointRef();
			final double[] xTransformed = new double[n];
			for (int j = 0; j < n; ++j) {
				xTransformed[j] = (xSmallest[j]) + (coeff * ((xSmallest[j]) - (xOriginal[j])));
			}
			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);
		}
		evaluateSimplex(comparator);
		return simplex[0];
	}
}
2019-04-12 08:36:44,493 ERROR main - Undo Error: modified: 
public class MultiDirectional extends org.apache.commons.math.optimization.direct.DirectSearchOptimizer {
	private final double khi;

	private final double gamma;

	public MultiDirectional() {
		this.khi = 2.0;
		this.gamma = 0.5;
	}

	public MultiDirectional(final double khi, final double gamma) {
		this.khi = khi;
		this.gamma = gamma;
	}

	@java.lang.Override
	protected void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws java.lang.IllegalArgumentException, org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		while (true) {
			incrementIterationsCounter();
			final org.apache.commons.math.optimization.RealPointValuePair[] original = simplex;
			final org.apache.commons.math.optimization.RealPointValuePair best = original[0];
			final org.apache.commons.math.optimization.RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
			if ((comparator.compare(reflected, best)) < 0) {
				final org.apache.commons.math.optimization.RealPointValuePair[] reflectedSimplex = simplex;
				final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
				if ((comparator.compare(reflected, expanded)) <= 0) {
					simplex = reflectedSimplex;
				}
				return ;
			}
			final org.apache.commons.math.optimization.RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
			if ((comparator.compare(contracted, best)) < 0) {
				return ;
			}
		} 
	}

	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException {
		final double[] xSmallest = original[0].getPointRef();
		final int n = xSmallest.length;
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		simplex[0] = original[0];
		for (int i = 1; i <= n; ++i) {
			final double[] xOriginal = original[i].getPointRef();
			final double[] xTransformed = new double[n];
			for (int j = 0; j < n; ++j)
				xTransformed[j] = (xSmallest[j]) + (coeff * ((xSmallest[j]) - (xOriginal[j])));
			
			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);
		}
		evaluateSimplex(comparator);
		return simplex[0];
	}
}
2019-04-12 08:39:07,754 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:41:35,085 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:43:50,297 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:46:27,874 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:48:37,117 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:50:43,790 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:52:47,938 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:55:05,309 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:57:05,377 INFO main - The Process that runs JUnit test cases had problems: process hasn't exited
2019-04-12 08:58:11,350 ERROR main - Error reading the validation process
 output: 
America/Los_Angeles
We accept : org.apache.commons.math.optimization.direct.MultiDirectionalTest
We accept : org.apache.commons.math.optimization.direct.MultiDirectionalTest
 
 error: 
